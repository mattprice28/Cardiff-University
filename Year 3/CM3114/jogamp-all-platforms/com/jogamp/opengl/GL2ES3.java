/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Sat Oct 10 03:14:23 CEST 2015 ----! */

package com.jogamp.opengl;

import java.util.*;
import com.jogamp.opengl.*;
import com.jogamp.opengl.fixedfunc.*;
import jogamp.opengl.*;
import java.io.PrintStream;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

 /**
  * <p> 
  * Interface containing the common subset of core GL2 and GLES3 (OpenGL ES 3.0+).<br/>
  * This interface reflects only the programmable shader functionality of desktop and embedded OpenGL<br/>
  * This interface is not GLES3 complete and merely exist to avoid duplicated definitions.<br/>
  * </p>
  */
public interface GL2ES3 extends GL2ES2{

  /** <code>GL_ARB_transform_feedback2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_BINDING_NV</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_BINDING = 0x8e25;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_MAX_IMAGE_UNITS_EXT</code> - CType: int */
  public static final int GL_MAX_IMAGE_UNITS = 0x8f38;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_2</code>, <code>GL_SGIS_texture_lod</code><br>Alias for: <code>GL_TEXTURE_MIN_LOD_SGIS</code> - CType: int */
  public static final int GL_TEXTURE_MIN_LOD = 0x813a;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>GL_FLOAT_MAT3x4_NV</code> - CType: int */
  public static final int GL_FLOAT_MAT3x4 = 0x8b68;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>GL_FLOAT_MAT3x2_NV</code> - CType: int */
  public static final int GL_FLOAT_MAT3x2 = 0x8b67;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_FRAMEBUFFER_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_FRAMEBUFFER_BARRIER_BIT = 0x400;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93d2;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_SIZE = 0x8a38;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_BINDING_ACCESS_EXT</code> - CType: int */
  public static final int GL_IMAGE_BINDING_ACCESS = 0x8f3e;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_shadow_samplers_array</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_SAMPLER_2D_ARRAY_SHADOW_NV</code>, <code>GL_SAMPLER_2D_ARRAY_SHADOW_EXT</code> - CType: int */
  public static final int GL_SAMPLER_2D_ARRAY_SHADOW = 0x8dc4;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_COMBINED_IMAGE_UNIFORMS = 0x90cf;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_BINDING_LAYER_EXT</code> - CType: int */
  public static final int GL_IMAGE_BINDING_LAYER = 0x8f3d;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BLOCK_DATA_SIZE = 0x8a40;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_OES_surfaceless_context</code><br>Alias for: <code>GL_FRAMEBUFFER_UNDEFINED_OES</code> - CType: int */
  public static final int GL_FRAMEBUFFER_UNDEFINED = 0x8219;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_ALL_BARRIER_BITS_EXT</code> - CType: long */
  public static final long GL_ALL_BARRIER_BITS = 0xffffffffL;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_TEXTURE_FETCH_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_TEXTURE_FETCH_BARRIER_BIT = 0x8;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_2D_ARRAY_EXT</code> - CType: int */
  public static final int GL_IMAGE_2D_ARRAY = 0x9053;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_float</code><br>Alias for: <code>GL_TEXTURE_GREEN_TYPE_ARB</code> - CType: int */
  public static final int GL_TEXTURE_GREEN_TYPE = 0x8c11;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90c9;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_COMMAND_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_COMMAND_BARRIER_BIT = 0x40;
  /** <code>GL_VERSION_3_0</code>, <code>GL_NV_conditional_render</code><br>Alias for: <code>GL_QUERY_BY_REGION_NO_WAIT_NV</code> - CType: int */
  public static final int GL_QUERY_BY_REGION_NO_WAIT = 0x8e16;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_EXT_texture</code><br>Alias for: <code>GL_TEXTURE_BLUE_SIZE_EXT</code> - CType: int */
  public static final int GL_TEXTURE_BLUE_SIZE = 0x805e;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_ACTIVE_UNIFORM_BLOCKS = 0x8a36;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGB32I_EXT</code> - CType: int */
  public static final int GL_RGB32I = 0x8d83;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93b5;
  /** <code>GL_ARB_texture_swizzle</code>, <code>GL_VERSION_3_3</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_EXT_texture_swizzle</code><br>Alias for: <code>GL_TEXTURE_SWIZZLE_R_EXT</code> - CType: int */
  public static final int GL_TEXTURE_SWIZZLE_R = 0x8e42;
  /** <code>GL_ARB_texture_swizzle</code>, <code>GL_VERSION_3_3</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_EXT_texture_swizzle</code><br>Alias for: <code>GL_TEXTURE_SWIZZLE_B_EXT</code> - CType: int */
  public static final int GL_TEXTURE_SWIZZLE_B = 0x8e44;
  /** <code>GL_ARB_texture_swizzle</code>, <code>GL_VERSION_3_3</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_EXT_texture_swizzle</code><br>Alias for: <code>GL_TEXTURE_SWIZZLE_A_EXT</code> - CType: int */
  public static final int GL_TEXTURE_SWIZZLE_A = 0x8e45;
  /** <code>GL_ARB_texture_swizzle</code>, <code>GL_VERSION_3_3</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_EXT_texture_swizzle</code><br>Alias for: <code>GL_TEXTURE_SWIZZLE_G_EXT</code> - CType: int */
  public static final int GL_TEXTURE_SWIZZLE_G = 0x8e43;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_ARB_pixel_buffer_object</code>, <code>GL_EXT_pixel_buffer_object</code><br>Alias for: <code>GL_PIXEL_PACK_BUFFER_BINDING_ARB</code>, <code>GL_PIXEL_PACK_BUFFER_BINDING_EXT</code> - CType: int */
  public static final int GL_PIXEL_PACK_BUFFER_BINDING = 0x88ed;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_R32UI = 0x8236;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_RG11_EAC = 0x9272;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_BINDING_NAME_EXT</code> - CType: int */
  public static final int GL_IMAGE_BINDING_NAME = 0x8f3a;
  /** <code>GL_ARB_transform_feedback2</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_PAUSED = 0x8e23;
  /** <code>GL_VERSION_4_5</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_ARB_robustness</code><br>Alias for: <code>GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB</code> - CType: int */
  public static final int GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x4;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93d4;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGBA_INTEGER_EXT</code> - CType: int */
  public static final int GL_RGBA_INTEGER = 0x8d99;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_array</code><br>Alias for: <code>GL_MAX_ARRAY_TEXTURE_LAYERS_EXT</code> - CType: int */
  public static final int GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88ff;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_shared_exponent</code>, <code>GL_APPLE_texture_packed_float</code><br>Alias for: <code>GL_UNSIGNED_INT_5_9_9_9_REV_EXT</code>, <code>GL_UNSIGNED_INT_5_9_9_9_REV_APPLE</code> - CType: int */
  public static final int GL_UNSIGNED_INT_5_9_9_9_REV = 0x8c3e;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code> - CType: int */
  public static final int GL_PACK_ROW_LENGTH = 0xd02;
  /** <code>GL_VERSION_3_0</code>, <code>GL_NV_conditional_render</code><br>Alias for: <code>GL_QUERY_WAIT_NV</code> - CType: int */
  public static final int GL_QUERY_WAIT = 0x8e13;
  /** <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_buffer_object</code><br>Alias for: <code>GL_DYNAMIC_COPY_ARB</code> - CType: int */
  public static final int GL_DYNAMIC_COPY = 0x88ea;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV</code>, <code>GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8c7f;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_ARB_ES3_2_compatibility</code><br>Alias for: <code>GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB</code> - CType: int */
  public static final int GL_MULTISAMPLE_LINE_WIDTH_RANGE = 0x9381;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8a34;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93bc;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_NAME_LENGTH = 0x8a39;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_UNSIGNED_INT_IMAGE_2D_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_IMAGE_2D = 0x9063;
  /** <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code> - CType: int */
  public static final int GL_FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RED_INTEGER_EXT</code> - CType: int */
  public static final int GL_RED_INTEGER = 0x8d94;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_packed_depth_stencil</code><br>Alias for: <code>GL_TEXTURE_STENCIL_SIZE_EXT</code> - CType: int */
  public static final int GL_TEXTURE_STENCIL_SIZE = 0x88f1;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_ARB_texture_buffer_object</code>, <code>GL_EXT_texture_buffer</code>, <code>GL_EXT_texture_buffer_object</code>, <code>GL_OES_texture_buffer</code><br>Alias for: <code>GL_TEXTURE_BINDING_BUFFER_ARB</code>, <code>GL_TEXTURE_BINDING_BUFFER_EXT</code>, <code>GL_TEXTURE_BINDING_BUFFER_OES</code> - CType: int */
  public static final int GL_TEXTURE_BINDING_BUFFER = 0x8c2c;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV</code>, <code>GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT</code> - CType: int */
  public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8c80;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_UNSIGNED_INT_IMAGE_3D_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_IMAGE_3D = 0x9064;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93d0;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_SIGNED_RG11_EAC = 0x9273;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_ARB_pixel_buffer_object</code>, <code>GL_EXT_pixel_buffer_object</code><br>Alias for: <code>GL_PIXEL_UNPACK_BUFFER_BINDING_ARB</code>, <code>GL_PIXEL_UNPACK_BUFFER_BINDING_EXT</code> - CType: int */
  public static final int GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88ef;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_INT_IMAGE_3D_EXT</code> - CType: int */
  public static final int GL_INT_IMAGE_3D = 0x9059;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_INT_IMAGE_2D_EXT</code> - CType: int */
  public static final int GL_INT_IMAGE_2D = 0x9058;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8a42;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_INT_SAMPLER_2D_ARRAY_EXT</code> - CType: int */
  public static final int GL_INT_SAMPLER_2D_ARRAY = 0x8dcf;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_SAMPLER_2D_ARRAY_EXT</code> - CType: int */
  public static final int GL_SAMPLER_2D_ARRAY = 0x8dc1;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_gpu_program4</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_MAX_PROGRAM_TEXEL_OFFSET_NV</code>, <code>GL_MAX_PROGRAM_TEXEL_OFFSET_EXT</code> - CType: int */
  public static final int GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>GL_FLOAT_MAT4x3_NV</code> - CType: int */
  public static final int GL_FLOAT_MAT4x3 = 0x8b6a;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>GL_FLOAT_MAT4x2_NV</code> - CType: int */
  public static final int GL_FLOAT_MAT4x2 = 0x8b69;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_R16UI = 0x8234;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_float</code><br>Alias for: <code>GL_TEXTURE_RED_TYPE_ARB</code> - CType: int */
  public static final int GL_TEXTURE_RED_TYPE = 0x8c10;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code>, <code>GL_ARB_copy_buffer</code>, <code>GL_NV_copy_buffer</code><br>Alias for: <code>GL_COPY_WRITE_BUFFER_NV</code> - CType: int */
  public static final int GL_COPY_WRITE_BUFFER = 0x8f37;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93d9;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93b9;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_EXT_shader_image_load_store</code>, <code>GL_EXT_texture_cube_map_array</code>, <code>GL_OES_texture_cube_map_array</code><br>Alias for: <code>GL_IMAGE_CUBE_MAP_ARRAY_EXT</code>, <code>GL_IMAGE_CUBE_MAP_ARRAY_OES</code> - CType: int */
  public static final int GL_IMAGE_CUBE_MAP_ARRAY = 0x9054;
  /** <code>GL_NV_geometry_program4</code>, <code>GL_EXT_geometry_shader4</code>, <code>GL_EXT_geometry_shader</code> - CType: int */
  public static final int GL_TRIANGLES_ADJACENCY_EXT = 0xc;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_ATOMIC_COUNTER_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_ATOMIC_COUNTER_BARRIER_BIT = 0x1000;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_R8I = 0x8231;
  /** <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_buffer_object</code><br>Alias for: <code>GL_STREAM_COPY_ARB</code> - CType: int */
  public static final int GL_STREAM_COPY = 0x88e2;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_ARB_texture_cube_map_array</code>, <code>GL_EXT_texture_cube_map_array</code>, <code>GL_OES_texture_cube_map_array</code><br>Alias for: <code>GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB</code>, <code>GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT</code>, <code>GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES</code> - CType: int */
  public static final int GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900e;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_EXT_tessellation_shader</code>, <code>GL_OES_tessellation_shader</code><br>Alias for: <code>GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT</code>, <code>GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES</code> - CType: int */
  public static final int GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92d3;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_2</code>, <code>GL_EXT_texture3D</code><br>Alias for: <code>GL_UNPACK_SKIP_IMAGES_EXT</code> - CType: int */
  public static final int GL_UNPACK_SKIP_IMAGES = 0x806d;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_DEPTH_STENCIL_ATTACHMENT = 0x821a;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8dd7;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_OES_texture_cube_map_array</code>, <code>GL_ARB_texture_cube_map_array</code>, <code>GL_EXT_texture_cube_map_array</code><br>Alias for: <code>GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES</code>, <code>GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB</code>, <code>GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900f;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_MATRIX_STRIDE = 0x8a3d;
  /** <code>GL_EXT_provoking_vertex</code>, <code>GL_EXT_geometry_shader</code> - CType: int */
  public static final int GL_FIRST_VERTEX_CONVENTION_EXT = 0x8e4d;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 0x800;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;
  /** <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_buffer_object</code><br>Alias for: <code>GL_STATIC_READ_ARB</code> - CType: int */
  public static final int GL_STATIC_READ = 0x88e5;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_SIGNED_NORMALIZED = 0x8f9c;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_TEXTURE_UPDATE_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_TEXTURE_UPDATE_BARRIER_BIT = 0x100;
  /** <code>GL_ARB_transform_feedback2</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8e24;
  /** <code>GL_ARB_get_program_binary</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_1</code> - CType: int */
  public static final int GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8a35;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93b7;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90c7;
  /** <code>GL_NV_geometry_program4</code>, <code>GL_EXT_geometry_shader4</code>, <code>GL_EXT_geometry_shader</code> - CType: int */
  public static final int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8c29;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BUFFER_SIZE = 0x8a2a;
  /** <code>GL_EXT_provoking_vertex</code>, <code>GL_EXT_geometry_shader</code> - CType: int */
  public static final int GL_LAST_VERTEX_CONVENTION_EXT = 0x8e4e;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279;
  /** <code>GL_ARB_depth_buffer_float</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_depth_buffer_float</code><br>Alias for: <code>GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV</code> - CType: int */
  public static final int GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_RGB8_ETC2 = 0x9274;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_ATOMIC_COUNTER_BUFFER_SIZE = 0x92c3;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_ARB_ES3_2_compatibility</code><br>Alias for: <code>GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB</code> - CType: int */
  public static final int GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY = 0x9382;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_ARB_texture_buffer_object</code>, <code>GL_EXT_texture_buffer</code>, <code>GL_EXT_texture_buffer_object</code>, <code>GL_OES_texture_buffer</code><br>Alias for: <code>GL_TEXTURE_BUFFER_ARB</code>, <code>GL_TEXTURE_BUFFER_EXT</code>, <code>GL_TEXTURE_BUFFER_OES</code> - CType: int */
  public static final int GL_TEXTURE_BUFFER = 0x8c2a;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_MINOR_VERSION = 0x821c;
  /** <code>GL_VERSION_3_0</code>, <code>GL_NV_conditional_render</code><br>Alias for: <code>GL_QUERY_BY_REGION_WAIT_NV</code> - CType: int */
  public static final int GL_QUERY_BY_REGION_WAIT = 0x8e15;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_UNIFORM_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_UNIFORM_BARRIER_BIT = 0x4;
  /** <code>GL_ARB_vertex_array_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_OES_vertex_array_object</code>, <code>GL_APPLE_vertex_array_object</code><br>Alias for: <code>GL_VERTEX_ARRAY_BINDING_OES</code>, <code>GL_VERTEX_ARRAY_BINDING_APPLE</code> - CType: int */
  public static final int GL_VERTEX_ARRAY_BINDING = 0x85b5;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_BUFFER_UPDATE_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_BUFFER_UPDATE_BARRIER_BIT = 0x200;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90c8;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_ARB_pixel_buffer_object</code>, <code>GL_EXT_pixel_buffer_object</code><br>Alias for: <code>GL_PIXEL_PACK_BUFFER_ARB</code>, <code>GL_PIXEL_PACK_BUFFER_EXT</code> - CType: int */
  public static final int GL_PIXEL_PACK_BUFFER = 0x88eb;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_PIXEL_BUFFER_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_PIXEL_BUFFER_BARRIER_BIT = 0x80;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8a43;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGBA16UI_EXT</code> - CType: int */
  public static final int GL_RGBA16UI = 0x8d76;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_RASTERIZER_DISCARD_NV</code>, <code>GL_RASTERIZER_DISCARD_EXT</code> - CType: int */
  public static final int GL_RASTERIZER_DISCARD = 0x8c89;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV</code>, <code>GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8c85;
  /** <code>GL_ARB_separate_shader_objects</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_1</code>, <code>GL_OES_tessellation_shader</code>, <code>GL_EXT_tessellation_shader</code><br>Alias for: <code>GL_TESS_CONTROL_SHADER_BIT_OES</code>, <code>GL_TESS_CONTROL_SHADER_BIT_EXT</code> - CType: int */
  public static final int GL_TESS_CONTROL_SHADER_BIT = 0x8;
  /** <code>GL_ARB_geometry_shader4</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_geometry_program4</code>, <code>GL_EXT_geometry_shader4</code><br>Alias for: <code>GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT</code> - CType: int */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8cd4;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_OES_texture_cube_map_array</code>, <code>GL_ARB_texture_cube_map_array</code>, <code>GL_EXT_texture_cube_map_array</code><br>Alias for: <code>GL_TEXTURE_CUBE_MAP_ARRAY_OES</code>, <code>GL_TEXTURE_CUBE_MAP_ARRAY_ARB</code>, <code>GL_TEXTURE_CUBE_MAP_ARRAY_EXT</code> - CType: int */
  public static final int GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_2</code>, <code>GL_EXT_texture3D</code><br>Alias for: <code>GL_UNPACK_IMAGE_HEIGHT_EXT</code> - CType: int */
  public static final int GL_UNPACK_IMAGE_HEIGHT = 0x806e;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93dd;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_INT_SAMPLER_3D_EXT</code> - CType: int */
  public static final int GL_INT_SAMPLER_3D = 0x8dcb;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x20;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_2</code>, <code>GL_EXT_draw_range_elements</code><br>Alias for: <code>GL_MAX_ELEMENTS_VERTICES_EXT</code> - CType: int */
  public static final int GL_MAX_ELEMENTS_VERTICES = 0x80e8;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_INT_SAMPLER_2D_EXT</code> - CType: int */
  public static final int GL_INT_SAMPLER_2D = 0x8dca;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_R8UI = 0x8232;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_float</code><br>Alias for: <code>GL_TEXTURE_ALPHA_TYPE_ARB</code> - CType: int */
  public static final int GL_TEXTURE_ALPHA_TYPE = 0x8c13;
  /** <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_3</code>, <code>GL_OES_geometry_shader</code>, <code>GL_EXT_geometry_shader</code><br>Alias for: <code>GL_FRAMEBUFFER_DEFAULT_LAYERS_OES</code>, <code>GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT</code> - CType: int */
  public static final int GL_FRAMEBUFFER_DEFAULT_LAYERS = 0x9312;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_BINDING_FORMAT_EXT</code> - CType: int */
  public static final int GL_IMAGE_BINDING_FORMAT = 0x906e;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_AMD_vertex_shader_tesselator</code>, <code>GL_AMD_vertex_shader_tessellator</code>, <code>GL_OES_texture_buffer</code>, <code>GL_EXT_gpu_shader4</code>, <code>GL_EXT_texture_buffer</code><br>Alias for: <code>GL_SAMPLER_BUFFER_AMD</code>, <code>GL_SAMPLER_BUFFER_OES</code>, <code>GL_SAMPLER_BUFFER_EXT</code> - CType: int */
  public static final int GL_SAMPLER_BUFFER = 0x8dc2;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_OES_sample_shading</code>, <code>GL_ARB_sample_shading</code><br>Alias for: <code>GL_MIN_SAMPLE_SHADING_VALUE_OES</code>, <code>GL_MIN_SAMPLE_SHADING_VALUE_ARB</code> - CType: int */
  public static final int GL_MIN_SAMPLE_SHADING_VALUE = 0x8c37;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_EXT_shader_image_load_store</code>, <code>GL_EXT_texture_cube_map_array</code>, <code>GL_OES_texture_cube_map_array</code><br>Alias for: <code>GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT</code>, <code>GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES</code> - CType: int */
  public static final int GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906a;
  /** <code>GL_EXT_render_snorm</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_RGBA8_SNORM = 0x8f97;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_ARB_pixel_buffer_object</code>, <code>GL_EXT_pixel_buffer_object</code><br>Alias for: <code>GL_PIXEL_UNPACK_BUFFER_ARB</code>, <code>GL_PIXEL_UNPACK_BUFFER_EXT</code> - CType: int */
  public static final int GL_PIXEL_UNPACK_BUFFER = 0x88ec;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_EXT_geometry_shader</code>, <code>GL_OES_geometry_shader</code><br>Alias for: <code>GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT</code>, <code>GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES</code> - CType: int */
  public static final int GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8a2c;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_EXT_sparse_texture</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_array</code><br>Alias for: <code>GL_TEXTURE_2D_ARRAY_EXT</code> - CType: int */
  public static final int GL_TEXTURE_2D_ARRAY = 0x8c1a;
  /** <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code> - CType: int */
  public static final int GL_MAX_FRAMEBUFFER_WIDTH = 0x9315;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_MAX_ELEMENT_INDEX = 0x8d6b;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT17 = 0x8cf1;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT16 = 0x8cf0;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT26 = 0x8cfa;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT25 = 0x8cf9;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT28 = 0x8cfc;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT27 = 0x8cfb;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT22 = 0x8cf6;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT21 = 0x8cf5;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT24 = 0x8cf8;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT23 = 0x8cf7;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT20 = 0x8cf4;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT19 = 0x8cf3;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT18 = 0x8cf2;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_float</code><br>Alias for: <code>GL_TEXTURE_DEPTH_TYPE_ARB</code> - CType: int */
  public static final int GL_TEXTURE_DEPTH_TYPE = 0x8c16;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT31 = 0x8cff;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT30 = 0x8cfe;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_COLOR_ATTACHMENT29 = 0x8cfd;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_1</code>, <code>GL_QCOM_extended_get</code><br>Alias for: <code>GL_TEXTURE_INTERNAL_FORMAT_QCOM</code> - CType: int */
  public static final int GL_TEXTURE_INTERNAL_FORMAT = 0x1003;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_EXT_discard_framebuffer</code><br>Alias for: <code>GL_COLOR_EXT</code> - CType: int */
  public static final int GL_COLOR = 0x1800;
  /** <code>GL_EXT_render_snorm</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_RG8_SNORM = 0x8f95;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_NV_blend_equation_advanced</code><br>Alias for: <code>GL_GREEN_NV</code> - CType: int */
  public static final int GL_GREEN = 0x1904;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8c76;
  /** <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_internalformat_query</code> - CType: int */
  public static final int GL_NUM_SAMPLE_COUNTS = 0x9380;
  /** <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_buffer_object</code><br>Alias for: <code>GL_STATIC_COPY_ARB</code> - CType: int */
  public static final int GL_STATIC_COPY = 0x88e6;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92d8;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_BUFFER_ACCESS_FLAGS = 0x911f;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92d6;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGB16UI_EXT</code> - CType: int */
  public static final int GL_RGB16UI = 0x8d77;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93d6;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93d1;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_OES_texture_cube_map_array</code>, <code>GL_ARB_texture_cube_map_array</code>, <code>GL_EXT_texture_cube_map_array</code><br>Alias for: <code>GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES</code>, <code>GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB</code>, <code>GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT</code> - CType: int */
  public static final int GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900a;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93d3;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93ba;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92cc;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_UNSIGNED_INT_VEC4_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_VEC4 = 0x8dc8;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_INT_IMAGE_CUBE_EXT</code> - CType: int */
  public static final int GL_INT_IMAGE_CUBE = 0x905b;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_UNSIGNED_INT_VEC3_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_VEC3 = 0x8dc7;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_UNSIGNED_INT_VEC2_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_VEC2 = 0x8dc6;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code>, <code>GL_ARB_copy_buffer</code>, <code>GL_NV_copy_buffer</code><br>Alias for: <code>GL_COPY_READ_BUFFER_NV</code> - CType: int */
  public static final int GL_COPY_READ_BUFFER = 0x8f36;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_UNSIGNED_INT_IMAGE_CUBE_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_IMAGE_CUBE = 0x9066;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA8_ETC2_EAC = 0x9278;
  /** <code>GL_EXT_render_snorm</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_R8_SNORM = 0x8f94;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_VERTEX_ATOMIC_COUNTERS = 0x92d2;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90ce;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_EXT_geometry_shader</code>, <code>GL_OES_geometry_shader</code><br>Alias for: <code>GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT</code>, <code>GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES</code> - CType: int */
  public static final int GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92cf;
  /** <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_ARB_vertex_buffer_object</code><br>Alias for: <code>GL_READ_ONLY_ARB</code> - CType: int */
  public static final int GL_READ_ONLY = 0x88b8;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93b8;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_OFFSET = 0x8a3b;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_OES_texture_buffer</code>, <code>GL_AMD_vertex_shader_tesselator</code>, <code>GL_AMD_vertex_shader_tessellator</code>, <code>GL_EXT_gpu_shader4</code>, <code>GL_EXT_texture_buffer</code><br>Alias for: <code>GL_INT_SAMPLER_BUFFER_OES</code>, <code>GL_INT_SAMPLER_BUFFER_AMD</code>, <code>GL_INT_SAMPLER_BUFFER_EXT</code> - CType: int */
  public static final int GL_INT_SAMPLER_BUFFER = 0x8dd0;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;
  /** <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_copy_buffer</code> - CType: int */
  public static final int GL_COPY_READ_BUFFER_BINDING = 0x8f36;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93b2;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_AMD_vertex_shader_tesselator</code>, <code>GL_AMD_vertex_shader_tessellator</code>, <code>GL_OES_texture_buffer</code>, <code>GL_EXT_gpu_shader4</code>, <code>GL_EXT_texture_buffer</code><br>Alias for: <code>GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD</code>, <code>GL_UNSIGNED_INT_SAMPLER_BUFFER_OES</code>, <code>GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8dd8;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_UNSIGNED_INT_ATOMIC_COUNTER = 0x92db;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_shared_exponent</code><br>Alias for: <code>GL_TEXTURE_SHARED_SIZE_EXT</code> - CType: int */
  public static final int GL_TEXTURE_SHARED_SIZE = 0x8c3f;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_0</code>, <code>GL_ARB_vertex_shader</code><br>Alias for: <code>GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB</code> - CType: int */
  public static final int GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8b4a;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_NV_blend_equation_advanced</code><br>Alias for: <code>GL_BLUE_NV</code> - CType: int */
  public static final int GL_BLUE = 0x1905;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8a41;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_BUFFER_MAP_LENGTH = 0x9120;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGB32UI_EXT</code> - CType: int */
  public static final int GL_RGB32UI = 0x8d71;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_CUBE_EXT</code> - CType: int */
  public static final int GL_IMAGE_CUBE = 0x9050;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_RG_INTEGER = 0x8228;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_ARB_texture_buffer_object</code>, <code>GL_EXT_texture_buffer</code>, <code>GL_EXT_texture_buffer_object</code>, <code>GL_OES_texture_buffer</code><br>Alias for: <code>GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB</code>, <code>GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT</code>, <code>GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES</code> - CType: int */
  public static final int GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8c2d;
  /** <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_3</code>, <code>GL_EXT_geometry_shader</code>, <code>GL_OES_geometry_shader</code><br>Alias for: <code>GL_MAX_FRAMEBUFFER_LAYERS_EXT</code>, <code>GL_MAX_FRAMEBUFFER_LAYERS_OES</code> - CType: int */
  public static final int GL_MAX_FRAMEBUFFER_LAYERS = 0x9317;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8a2b;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_EXT_texture_sRGB</code>, <code>GL_NV_sRGB_formats</code><br>Alias for: <code>GL_SRGB8_EXT</code>, <code>GL_SRGB8_NV</code> - CType: int */
  public static final int GL_SRGB8 = 0x8c41;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code> - CType: int */
  public static final int GL_PACK_SKIP_PIXELS = 0xd04;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGB_INTEGER_EXT</code> - CType: int */
  public static final int GL_RGB_INTEGER = 0x8d98;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_FRAMEBUFFER_DEFAULT = 0x8218;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_R16I = 0x8233;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ETC2 = 0x9275;
  /** <code>GL_ARB_separate_shader_objects</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_1</code>, <code>GL_OES_geometry_shader</code>, <code>GL_EXT_geometry_shader</code><br>Alias for: <code>GL_GEOMETRY_SHADER_BIT_OES</code>, <code>GL_GEOMETRY_SHADER_BIT_EXT</code> - CType: int */
  public static final int GL_GEOMETRY_SHADER_BIT = 0x4;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV</code>, <code>GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT</code> - CType: int */
  public static final int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8c8a;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_EXT_texture</code><br>Alias for: <code>GL_TEXTURE_ALPHA_SIZE_EXT</code> - CType: int */
  public static final int GL_TEXTURE_ALPHA_SIZE = 0x805f;
  /** <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_buffer_object</code><br>Alias for: <code>GL_DYNAMIC_READ_ARB</code> - CType: int */
  public static final int GL_DYNAMIC_READ = 0x88e9;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV</code>, <code>GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BUFFER_START = 0x8a29;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_OES_texture_cube_map_array</code>, <code>GL_EXT_shader_image_load_store</code>, <code>GL_EXT_texture_cube_map_array</code><br>Alias for: <code>GL_INT_IMAGE_CUBE_MAP_ARRAY_OES</code>, <code>GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT</code> - CType: int */
  public static final int GL_INT_IMAGE_CUBE_MAP_ARRAY = 0x905f;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_UNIFORM_BLOCK_SIZE = 0x8a30;
  /** <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code> - CType: int */
  public static final int GL_FRAMEBUFFER_DEFAULT_WIDTH = 0x9310;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGBA16I_EXT</code> - CType: int */
  public static final int GL_RGBA16I = 0x8d88;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_2</code>, <code>GL_APPLE_texture_max_level</code>, <code>GL_SGIS_texture_lod</code><br>Alias for: <code>GL_TEXTURE_MAX_LEVEL_APPLE</code>, <code>GL_TEXTURE_MAX_LEVEL_SGIS</code> - CType: int */
  public static final int GL_TEXTURE_MAX_LEVEL = 0x813d;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_BUFFER_NV</code>, <code>GL_TRANSFORM_FEEDBACK_BUFFER_EXT</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER = 0x8c8e;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_COMBINED_ATOMIC_COUNTERS = 0x92d7;
  /** <code>GL_NV_geometry_program4</code>, <code>GL_EXT_geometry_shader4</code>, <code>GL_EXT_geometry_shader</code> - CType: int */
  public static final int GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0xd;
  /** <code>GL_NV_geometry_program4</code>, <code>GL_EXT_geometry_shader4</code>, <code>GL_EXT_geometry_shader</code> - CType: int */
  public static final int GL_LINE_STRIP_ADJACENCY_EXT = 0xb;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BLOCK_BINDING = 0x8a3f;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_EXT_texture</code><br>Alias for: <code>GL_TEXTURE_GREEN_SIZE_EXT</code> - CType: int */
  public static final int GL_TEXTURE_GREEN_SIZE = 0x805d;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8a33;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_TYPE = 0x8a37;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_QCOM_extended_get</code><br>Alias for: <code>GL_TEXTURE_HEIGHT_QCOM</code> - CType: int */
  public static final int GL_TEXTURE_HEIGHT = 0x1001;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_shared_exponent</code>, <code>GL_APPLE_texture_packed_float</code><br>Alias for: <code>GL_RGB9_E5_EXT</code>, <code>GL_RGB9_E5_APPLE</code> - CType: int */
  public static final int GL_RGB9_E5 = 0x8c3d;
  /** <code>GL_ARB_transform_feedback2</code>, <code>GL_EXT_debug_label</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_NV</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK = 0x8e22;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_float</code><br>Alias for: <code>GL_TEXTURE_BLUE_TYPE_ARB</code> - CType: int */
  public static final int GL_TEXTURE_BLUE_TYPE = 0x8c12;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code>, <code>GL_NV_shadow_samplers_cube</code><br>Alias for: <code>GL_SAMPLER_CUBE_SHADOW_EXT</code>, <code>GL_SAMPLER_CUBE_SHADOW_NV</code> - CType: int */
  public static final int GL_SAMPLER_CUBE_SHADOW = 0x8dc5;
  /** <code>GL_NV_geometry_program4</code>, <code>GL_EXT_geometry_shader4</code>, <code>GL_EXT_geometry_shader</code> - CType: int */
  public static final int GL_LINES_ADJACENCY_EXT = 0xa;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGBA8UI_EXT</code> - CType: int */
  public static final int GL_RGBA8UI = 0x8d7c;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x1;
  /** <code>GL_ARB_depth_buffer_float</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_depth_buffer_float</code><br>Alias for: <code>GL_DEPTH_COMPONENT32F_NV</code> - CType: int */
  public static final int GL_DEPTH_COMPONENT32F = 0x8cac;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV</code>, <code>GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8c8f;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_R32I = 0x8235;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_BINDING_LAYERED_EXT</code> - CType: int */
  public static final int GL_IMAGE_BINDING_LAYERED = 0x8f3c;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93b0;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93db;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGB8I_EXT</code> - CType: int */
  public static final int GL_RGB8I = 0x8d8f;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_EXT_tessellation_shader</code>, <code>GL_OES_tessellation_shader</code><br>Alias for: <code>GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT</code>, <code>GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES</code> - CType: int */
  public static final int GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90cb;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_RG16I = 0x8239;
  /** <code>GL_NV_geometry_program4</code>, <code>GL_EXT_geometry_shader4</code>, <code>GL_EXT_geometry_shader</code> - CType: int */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8da7;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGBA32UI_EXT</code> - CType: int */
  public static final int GL_RGBA32UI = 0x8d70;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_RG32UI = 0x823c;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_0</code>, <code>GL_ARB_fragment_shader</code><br>Alias for: <code>GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB</code> - CType: int */
  public static final int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8b49;
  /** <code>GL_VERSION_3_3</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_NV_instanced_arrays</code>, <code>GL_ARB_instanced_arrays</code>, <code>GL_EXT_instanced_arrays</code>, <code>GL_ANGLE_instanced_arrays</code><br>Alias for: <code>GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV</code>, <code>GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB</code>, <code>GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT</code>, <code>GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE</code> - CType: int */
  public static final int GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88fe;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_ELEMENT_ARRAY_BARRIER_BIT_EXT</code> - CType: int */
  public static final int GL_ELEMENT_ARRAY_BARRIER_BIT = 0x2;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93d5;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_PRIMITIVE_RESTART_FIXED_INDEX = 0x8d69;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_INTERLEAVED_ATTRIBS_NV</code>, <code>GL_INTERLEAVED_ATTRIBS_EXT</code> - CType: int */
  public static final int GL_INTERLEAVED_ATTRIBS = 0x8c8c;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_array</code><br>Alias for: <code>GL_TEXTURE_BINDING_2D_ARRAY_EXT</code> - CType: int */
  public static final int GL_TEXTURE_BINDING_2D_ARRAY = 0x8c1d;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_QCOM_extended_get</code><br>Alias for: <code>GL_TEXTURE_WIDTH_QCOM</code> - CType: int */
  public static final int GL_TEXTURE_WIDTH = 0x1000;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_OES_sample_shading</code>, <code>GL_ARB_sample_shading</code><br>Alias for: <code>GL_SAMPLE_SHADING_OES</code>, <code>GL_SAMPLE_SHADING_ARB</code> - CType: int */
  public static final int GL_SAMPLE_SHADING = 0x8c36;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_3D_EXT</code> - CType: int */
  public static final int GL_IMAGE_3D = 0x904e;
  /** <code>GL_ARB_provoking_vertex</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_2</code>, <code>GL_EXT_provoking_vertex</code>, <code>GL_EXT_geometry_shader</code>, <code>GL_OES_geometry_shader</code><br>Alias for: <code>GL_LAST_VERTEX_CONVENTION_EXT</code>, <code>GL_LAST_VERTEX_CONVENTION_OES</code> - CType: int */
  public static final int GL_LAST_VERTEX_CONVENTION = 0x8e4e;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_CONTEXT_FLAGS = 0x821e;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_OES_tessellation_shader</code>, <code>GL_EXT_tessellation_shader</code><br>Alias for: <code>GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES</code>, <code>GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT</code> - CType: int */
  public static final int GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90cc;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code>, <code>GL_NV_gpu_program4</code><br>Alias for: <code>GL_MIN_PROGRAM_TEXEL_OFFSET_EXT</code>, <code>GL_MIN_PROGRAM_TEXEL_OFFSET_NV</code> - CType: int */
  public static final int GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_2</code>, <code>GL_SGIS_texture_lod</code><br>Alias for: <code>GL_TEXTURE_MAX_LOD_SGIS</code> - CType: int */
  public static final int GL_TEXTURE_MAX_LOD = 0x813b;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_ARB_texture_cube_map_array</code>, <code>GL_EXT_texture_cube_map_array</code>, <code>GL_OES_texture_cube_map_array</code><br>Alias for: <code>GL_SAMPLER_CUBE_MAP_ARRAY_ARB</code>, <code>GL_SAMPLER_CUBE_MAP_ARRAY_EXT</code>, <code>GL_SAMPLER_CUBE_MAP_ARRAY_OES</code> - CType: int */
  public static final int GL_SAMPLER_CUBE_MAP_ARRAY = 0x900c;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93bd;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGBA32I_EXT</code> - CType: int */
  public static final int GL_RGBA32I = 0x8d82;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_RG32I = 0x823b;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93b4;
  /** <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code> - CType: int */
  public static final int GL_MAX_FRAMEBUFFER_HEIGHT = 0x9316;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92d1;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV</code>, <code>GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT</code> - CType: int */
  public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8c8b;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code> - CType: int */
  public static final int GL_PACK_SKIP_ROWS = 0xd03;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_NUM_EXTENSIONS = 0x821d;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT</code>, <code>GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV</code> - CType: int */
  public static final int GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88fd;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93da;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_UNSIGNED_INT_SAMPLER_CUBE_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8dd4;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93b1;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_EXT_tessellation_shader</code>, <code>GL_OES_tessellation_shader</code><br>Alias for: <code>GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT</code>, <code>GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES</code> - CType: int */
  public static final int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92d4;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_OES_tessellation_shader</code>, <code>GL_EXT_tessellation_shader</code><br>Alias for: <code>GL_QUADS_OES</code>, <code>GL_QUADS_EXT</code> - CType: int */
  public static final int GL_QUADS = 0x7;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_ATOMIC_COUNTER_BUFFER_START = 0x92c2;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_EXT_discard_framebuffer</code><br>Alias for: <code>GL_DEPTH_EXT</code> - CType: int */
  public static final int GL_DEPTH = 0x1801;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8a2d;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_EXT_shader_image_load_store</code>, <code>GL_EXT_texture_buffer</code>, <code>GL_OES_texture_buffer</code><br>Alias for: <code>GL_IMAGE_BUFFER_EXT</code>, <code>GL_IMAGE_BUFFER_OES</code> - CType: int */
  public static final int GL_IMAGE_BUFFER = 0x9051;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_OES_texture_buffer</code>, <code>GL_EXT_shader_image_load_store</code>, <code>GL_EXT_texture_buffer</code><br>Alias for: <code>GL_UNSIGNED_INT_IMAGE_BUFFER_OES</code>, <code>GL_UNSIGNED_INT_IMAGE_BUFFER_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_IMAGE_BUFFER = 0x9067;
  /** <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_ARB_vertex_buffer_object</code><br>Alias for: <code>GL_READ_WRITE_ARB</code> - CType: int */
  public static final int GL_READ_WRITE = 0x88ba;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_2</code>, <code>GL_EXT_texture3D</code>, <code>GL_QCOM_extended_get</code><br>Alias for: <code>GL_TEXTURE_DEPTH_EXT</code>, <code>GL_TEXTURE_DEPTH_QCOM</code> - CType: int */
  public static final int GL_TEXTURE_DEPTH = 0x8071;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_OES_tessellation_shader</code>, <code>GL_EXT_tessellation_shader</code><br>Alias for: <code>GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES</code>, <code>GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT</code> - CType: int */
  public static final int GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92ce;
  /** <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code> - CType: int */
  public static final int GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_2</code>, <code>GL_EXT_draw_range_elements</code><br>Alias for: <code>GL_MAX_ELEMENTS_INDICES_EXT</code> - CType: int */
  public static final int GL_MAX_ELEMENTS_INDICES = 0x80e9;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_2D_EXT</code> - CType: int */
  public static final int GL_IMAGE_2D = 0x904d;
  /** <code>GL_ARB_separate_shader_objects</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_1</code>, <code>GL_EXT_tessellation_shader</code>, <code>GL_OES_tessellation_shader</code><br>Alias for: <code>GL_TESS_EVALUATION_SHADER_BIT_EXT</code>, <code>GL_TESS_EVALUATION_SHADER_BIT_OES</code> - CType: int */
  public static final int GL_TESS_EVALUATION_SHADER_BIT = 0x10;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_EXT_geometry_shader</code>, <code>GL_OES_geometry_shader</code><br>Alias for: <code>GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT</code>, <code>GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES</code> - CType: int */
  public static final int GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90cd;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code>, <code>GL_EXT_bindable_uniform</code><br>Alias for: <code>GL_UNIFORM_BUFFER_EXT</code> - CType: int */
  public static final int GL_UNIFORM_BUFFER = 0x8a11;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_EXT_texture</code><br>Alias for: <code>GL_TEXTURE_RED_SIZE_EXT</code> - CType: int */
  public static final int GL_TEXTURE_RED_SIZE = 0x805c;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93b6;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGB8UI_EXT</code> - CType: int */
  public static final int GL_RGB8UI = 0x8d7d;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_IS_ROW_MAJOR = 0x8a3e;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BLOCK_INDEX = 0x8a3a;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_2</code>, <code>GL_SGIS_texture_lod</code><br>Alias for: <code>GL_TEXTURE_BASE_LEVEL_SGIS</code> - CType: int */
  public static final int GL_TEXTURE_BASE_LEVEL = 0x813c;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8a44;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_INT_IMAGE_2D_ARRAY_EXT</code> - CType: int */
  public static final int GL_INT_IMAGE_2D_ARRAY = 0x905e;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGB16I_EXT</code> - CType: int */
  public static final int GL_RGB16I = 0x8d89;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_R11_EAC = 0x9270;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_4</code>, <code>GL_EXT_texture_lod_bias</code><br>Alias for: <code>GL_MAX_TEXTURE_LOD_BIAS_EXT</code> - CType: int */
  public static final int GL_MAX_TEXTURE_LOD_BIAS = 0x84fd;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_APPLE_texture_packed_float</code>, <code>GL_EXT_packed_float</code><br>Alias for: <code>GL_R11F_G11F_B10F_APPLE</code>, <code>GL_R11F_G11F_B10F_EXT</code> - CType: int */
  public static final int GL_R11F_G11F_B10F = 0x8c3a;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_integer</code><br>Alias for: <code>GL_RGBA8I_EXT</code> - CType: int */
  public static final int GL_RGBA8I = 0x8d8e;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_OES_texture_buffer</code>, <code>GL_EXT_shader_image_load_store</code>, <code>GL_EXT_texture_buffer</code><br>Alias for: <code>GL_INT_IMAGE_BUFFER_OES</code>, <code>GL_INT_IMAGE_BUFFER_EXT</code> - CType: int */
  public static final int GL_INT_IMAGE_BUFFER = 0x905c;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_3</code>, <code>GL_ARB_texture_compression</code><br>Alias for: <code>GL_TEXTURE_COMPRESSED_ARB</code> - CType: int */
  public static final int GL_TEXTURE_COMPRESSED = 0x86a1;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_EXT_tessellation_shader</code>, <code>GL_OES_tessellation_shader</code><br>Alias for: <code>GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT</code>, <code>GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES</code> - CType: int */
  public static final int GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92cd;
  /** <code>GL_VERSION_3_0</code>, <code>GL_NV_conditional_render</code><br>Alias for: <code>GL_QUERY_NO_WAIT_NV</code> - CType: int */
  public static final int GL_QUERY_NO_WAIT = 0x8e14;
  /** <code>GL_ARB_ES3_compatibility</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_COMPRESSED_SIGNED_R11_EAC = 0x9271;
  /** <code>GL_OES_draw_buffers_indexed</code>, <code>GL_ARB_imaging</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_4</code>, <code>GL_EXT_blend_minmax</code><br>Alias for: <code>GL_MIN_EXT</code> - CType: int */
  public static final int GL_MIN = 0x8007;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_ARB_ES3_2_compatibility</code>, <code>GL_EXT_primitive_bounding_box</code>, <code>GL_OES_primitive_bounding_box</code><br>Alias for: <code>GL_PRIMITIVE_BOUNDING_BOX_ARB</code>, <code>GL_PRIMITIVE_BOUNDING_BOX_EXT</code>, <code>GL_PRIMITIVE_BOUNDING_BOX_OES</code> - CType: int */
  public static final int GL_PRIMITIVE_BOUNDING_BOX = 0x92be;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93d7;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_EXT_geometry_shader</code>, <code>GL_OES_geometry_shader</code><br>Alias for: <code>GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT</code>, <code>GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES</code> - CType: int */
  public static final int GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8a32;
  /** <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_buffer_object</code><br>Alias for: <code>GL_STREAM_READ_ARB</code> - CType: int */
  public static final int GL_STREAM_READ = 0x88e1;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_VERTEX_IMAGE_UNIFORMS = 0x90ca;
  /** <code>GL_ARB_provoking_vertex</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_2</code>, <code>GL_OES_geometry_shader</code>, <code>GL_EXT_provoking_vertex</code>, <code>GL_EXT_geometry_shader</code><br>Alias for: <code>GL_FIRST_VERTEX_CONVENTION_OES</code>, <code>GL_FIRST_VERTEX_CONVENTION_EXT</code> - CType: int */
  public static final int GL_FIRST_VERTEX_CONVENTION = 0x8e4d;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_VARYINGS_NV</code>, <code>GL_TRANSFORM_FEEDBACK_VARYINGS_EXT</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8c83;
  /** <code>GL_OES_draw_buffers_indexed</code>, <code>GL_ARB_imaging</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_4</code>, <code>GL_EXT_blend_minmax</code><br>Alias for: <code>GL_MAX_EXT</code> - CType: int */
  public static final int GL_MAX = 0x8008;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_ARB_texture_cube_map_array</code>, <code>GL_EXT_texture_cube_map_array</code>, <code>GL_OES_texture_cube_map_array</code><br>Alias for: <code>GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB</code>, <code>GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT</code>, <code>GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES</code> - CType: int */
  public static final int GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900d;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_UNIFORM_ARRAY_STRIDE = 0x8a3c;
  /** <code>GL_NV_geometry_program4</code>, <code>GL_EXT_geometry_shader4</code>, <code>GL_EXT_geometry_shader</code> - CType: int */
  public static final int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8da8;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_transform_feedback</code>, <code>GL_NV_transform_feedback</code><br>Alias for: <code>GL_SEPARATE_ATTRIBS_EXT</code>, <code>GL_SEPARATE_ATTRIBS_NV</code> - CType: int */
  public static final int GL_SEPARATE_ATTRIBS = 0x8c8d;
  /** <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_4</code>, <code>GL_ARB_depth_texture</code><br>Alias for: <code>GL_TEXTURE_DEPTH_SIZE_ARB</code> - CType: int */
  public static final int GL_TEXTURE_DEPTH_SIZE = 0x884a;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_RG8UI = 0x8238;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_MAJOR_VERSION = 0x821b;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93d8;
  /** <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code> - CType: int */
  public static final int GL_FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_OES_texture_buffer</code>, <code>GL_ARB_texture_buffer_object</code>, <code>GL_EXT_texture_buffer</code>, <code>GL_EXT_texture_buffer_object</code><br>Alias for: <code>GL_MAX_TEXTURE_BUFFER_SIZE_OES</code>, <code>GL_MAX_TEXTURE_BUFFER_SIZE_ARB</code>, <code>GL_MAX_TEXTURE_BUFFER_SIZE_EXT</code> - CType: int */
  public static final int GL_MAX_TEXTURE_BUFFER_SIZE = 0x8c2b;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8a2f;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>GL_FLOAT_MAT2x3_NV</code> - CType: int */
  public static final int GL_FLOAT_MAT2x3 = 0x8b65;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>GL_FLOAT_MAT2x4_NV</code> - CType: int */
  public static final int GL_FLOAT_MAT2x4 = 0x8b66;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_RG16UI = 0x823a;
  /** <code>GL_ARB_geometry_shader4</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_geometry_shader4</code><br>Alias for: <code>GL_MAX_VARYING_COMPONENTS_EXT</code> - CType: int */
  public static final int GL_MAX_VARYING_COMPONENTS = 0x8b4b;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_UNSIGNED_INT_SAMPLER_2D_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_SAMPLER_2D = 0x8dd2;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93bb;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_UNSIGNED_INT_SAMPLER_3D_EXT</code> - CType: int */
  public static final int GL_UNSIGNED_INT_SAMPLER_3D = 0x8dd3;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>GL_INT_SAMPLER_CUBE_EXT</code> - CType: int */
  public static final int GL_INT_SAMPLER_CUBE = 0x8dcc;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_RGB8_SNORM = 0x8f96;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93b3;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_2</code>, <code>GL_OES_geometry_shader</code>, <code>GL_EXT_geometry_shader</code><br>Alias for: <code>GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES</code>, <code>GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT</code> - CType: int */
  public static final int GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92d5;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_RG8I = 0x8237;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_EXT_multiview_draw_buffers</code>, <code>GL_NV_read_buffer</code><br>Alias for: <code>GL_READ_BUFFER_EXT</code>, <code>GL_READ_BUFFER_NV</code> - CType: int */
  public static final int GL_READ_BUFFER = 0xc02;
  /** <code>GL_ARB_stencil_texturing</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code> - CType: int */
  public static final int GL_DEPTH_STENCIL_TEXTURE_MODE = 0x90ea;
  /** <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_transform_feedback</code>, <code>GL_EXT_geometry_shader</code>, <code>GL_NV_transform_feedback</code>, <code>GL_OES_geometry_shader</code><br>Alias for: <code>GL_PRIMITIVES_GENERATED_EXT</code>, <code>GL_PRIMITIVES_GENERATED_NV</code>, <code>GL_PRIMITIVES_GENERATED_OES</code> - CType: int */
  public static final int GL_PRIMITIVES_GENERATED = 0x8c87;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92d0;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code>, <code>GL_EXT_bindable_uniform</code><br>Alias for: <code>GL_UNIFORM_BUFFER_BINDING_EXT</code> - CType: int */
  public static final int GL_UNIFORM_BUFFER_BINDING = 0x8a28;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_ATOMIC_COUNTER_BUFFER = 0x92c0;
  /** <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code> - CType: int */
  public static final int GL_MAX_FRAMEBUFFER_SAMPLES = 0x9318;
  /** <code>GL_ARB_depth_buffer_float</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_depth_buffer_float</code><br>Alias for: <code>GL_DEPTH32F_STENCIL8_NV</code> - CType: int */
  public static final int GL_DEPTH32F_STENCIL8 = 0x8cad;
  /** <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>GL_IMAGE_BINDING_LEVEL_EXT</code> - CType: int */
  public static final int GL_IMAGE_BINDING_LEVEL = 0x8f3b;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> - CType: int */
  public static final int GL_BUFFER_MAP_OFFSET = 0x9121;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92d9;
  /** <code>GL_ARB_texture_rgb10_a2ui</code>, <code>GL_VERSION_3_3</code>, <code>GL_ES_VERSION_3_0</code> - CType: int */
  public static final int GL_RGB10_A2UI = 0x906f;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92dc;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>GL_TRANSFORM_FEEDBACK_BUFFER_START_NV</code>, <code>GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT</code> - CType: int */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8c84;
  /** <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_copy_buffer</code> - CType: int */
  public static final int GL_COPY_WRITE_BUFFER_BINDING = 0x8f37;
  /** <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_1</code>, <code>GL_VERSION_1_0</code>, <code>GL_EXT_discard_framebuffer</code><br>Alias for: <code>GL_STENCIL_EXT</code> - CType: int */
  public static final int GL_STENCIL = 0x1802;
  /** <code>GL_KHR_texture_compression_astc_hdr</code>, <code>GL_KHR_texture_compression_astc_ldr</code> - CType: int */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93dc;
  /** <code>GL_ARB_shader_atomic_counters</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code> - CType: int */
  public static final int GL_ATOMIC_COUNTER_BUFFER_BINDING = 0x92c1;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8a31;
  /** <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> - CType: int */
  public static final int GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8a2e;

  /** Entry point to C language function: <code> void {@native glReadBuffer}(GLenum mode) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code>, <code>GL_NV_read_buffer</code><br>Alias for: <code>glReadBufferNV</code>   */
  public void glReadBuffer(int mode);

  /** Entry point to C language function: <code> void {@native glGetTexLevelParameterfv}(GLenum target, GLint level, GLenum pname, GLfloat *  params) </code> <br>Part of <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_0</code><br>
      @param params a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glGetTexLevelParameterfv(int target, int level, int pname, FloatBuffer params);

  /** Entry point to C language function: <code> void {@native glGetTexLevelParameterfv}(GLenum target, GLint level, GLenum pname, GLfloat *  params) </code> <br>Part of <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_0</code><br>   */
  public void glGetTexLevelParameterfv(int target, int level, int pname, float[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetTexLevelParameteriv}(GLenum target, GLint level, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_0</code><br>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetTexLevelParameteriv(int target, int level, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetTexLevelParameteriv}(GLenum target, GLint level, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_1_0</code><br>   */
  public void glGetTexLevelParameteriv(int target, int level, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glDrawRangeElements}(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *  indices) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_2</code>, <code>GL_EXT_draw_range_elements</code><br>Alias for: <code>glDrawRangeElementsEXT</code>   */
  public void glDrawRangeElements(int mode, int start, int end, int count, int type, long indices_buffer_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2x3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix2x3fvNV</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix2x3fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2x3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix2x3fvNV</code>   */
  public void glUniformMatrix2x3fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3x2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix3x2fvNV</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix3x2fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3x2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix3x2fvNV</code>   */
  public void glUniformMatrix3x2fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2x4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix2x4fvNV</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix2x4fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2x4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix2x4fvNV</code>   */
  public void glUniformMatrix2x4fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4x2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix4x2fvNV</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix4x2fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4x2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix4x2fvNV</code>   */
  public void glUniformMatrix4x2fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3x4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix3x4fvNV</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix3x4fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3x4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix3x4fvNV</code>   */
  public void glUniformMatrix3x4fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4x3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix4x3fvNV</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix4x3fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4x3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>, <code>GL_NV_non_square_matrices</code><br>Alias for: <code>glUniformMatrix4x3fvNV</code>   */
  public void glUniformMatrix4x3fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glColorMaski}(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_draw_buffers_indexed</code>, <code>GL_OES_draw_buffers_indexed</code><br>Alias for: <code>glColorMaskiEXT</code>, <code>glColorMaskiOES</code>   */
  public void glColorMaski(int index, boolean r, boolean g, boolean b, boolean a);

  /** Entry point to C language function: <code> void {@native glGetBooleani_v}(GLenum target, GLuint index, GLboolean *  data) </code> <br>Part of <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_3_0</code><br>
      @param data a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetBooleani_v(int target, int index, ByteBuffer data);

  /** Entry point to C language function: <code> void {@native glGetBooleani_v}(GLenum target, GLuint index, GLboolean *  data) </code> <br>Part of <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_3_0</code><br>   */
  public void glGetBooleani_v(int target, int index, byte[] data, int data_offset);

  /** Entry point to C language function: <code> void {@native glGetIntegeri_v}(GLenum target, GLuint index, GLint *  data) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_multiview_draw_buffers</code><br>Alias for: <code>glGetIntegeri_vEXT</code>
      @param data a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetIntegeri_v(int target, int index, IntBuffer data);

  /** Entry point to C language function: <code> void {@native glGetIntegeri_v}(GLenum target, GLuint index, GLint *  data) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_multiview_draw_buffers</code><br>Alias for: <code>glGetIntegeri_vEXT</code>   */
  public void glGetIntegeri_v(int target, int index, int[] data, int data_offset);

  /** Entry point to C language function: <code> void {@native glEnablei}(GLenum target, GLuint index) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_viewport_array</code>, <code>GL_OES_draw_buffers_indexed</code>, <code>GL_EXT_draw_buffers_indexed</code><br>Alias for: <code>glEnableiNV</code>, <code>glEnableiOES</code>, <code>glEnableiEXT</code>   */
  public void glEnablei(int target, int index);

  /** Entry point to C language function: <code> void {@native glDisablei}(GLenum target, GLuint index) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_0</code>, <code>GL_OES_draw_buffers_indexed</code>, <code>GL_NV_viewport_array</code>, <code>GL_EXT_draw_buffers_indexed</code><br>Alias for: <code>glDisableiOES</code>, <code>glDisableiNV</code>, <code>glDisableiEXT</code>   */
  public void glDisablei(int target, int index);

  /** Entry point to C language function: <code> GLboolean {@native glIsEnabledi}(GLenum target, GLuint index) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_0</code>, <code>GL_OES_draw_buffers_indexed</code>, <code>GL_NV_viewport_array</code>, <code>GL_EXT_draw_buffers_indexed</code><br>Alias for: <code>glIsEnablediOES</code>, <code>glIsEnablediNV</code>, <code>glIsEnablediEXT</code>   */
  public boolean glIsEnabledi(int target, int index);

  /** Entry point to C language function: <code> void {@native glBeginTransformFeedback}(GLenum primitiveMode) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_transform_feedback</code>, <code>GL_NV_transform_feedback</code><br>Alias for: <code>glBeginTransformFeedbackEXT</code>, <code>glBeginTransformFeedbackNV</code>   */
  public void glBeginTransformFeedback(int primitiveMode);

  /** Entry point to C language function: <code> void {@native glEndTransformFeedback}(void) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>glEndTransformFeedbackNV</code>, <code>glEndTransformFeedbackEXT</code>   */
  public void glEndTransformFeedback();

  /** Entry point to C language function: <code> void {@native glBindBufferRange}(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>glBindBufferRangeNV</code>, <code>glBindBufferRangeEXT</code>   */
  public void glBindBufferRange(int target, int index, int buffer, long offset, long size);

  /** Entry point to C language function: <code> void {@native glBindBufferBase}(GLenum target, GLuint index, GLuint buffer) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>glBindBufferBaseNV</code>, <code>glBindBufferBaseEXT</code>   */
  public void glBindBufferBase(int target, int index, int buffer);

  /** Entry point to C language function: <code> void {@native glTransformFeedbackVaryings}(GLuint program, GLsizei count, const GLchar * const  *  varyings, GLenum bufferMode) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_transform_feedback</code>, <code>GL_NV_transform_feedback</code><br>Alias for: <code>glTransformFeedbackVaryingsEXT</code>, <code>glTransformFeedbackVaryingsNV</code>   */
  public void glTransformFeedbackVaryings(int program, int count, String[] varyings, int bufferMode);

  /** Entry point to C language function: <code> void {@native glGetTransformFeedbackVarying}(GLuint program, GLuint index, GLsizei bufSize, GLsizei *  length, GLsizei *  size, GLenum *  type, GLchar *  name) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>glGetTransformFeedbackVaryingNV</code>, <code>glGetTransformFeedbackVaryingEXT</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param size a direct or array-backed {@link java.nio.IntBuffer}
      @param type a direct or array-backed {@link java.nio.IntBuffer}
      @param name a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetTransformFeedbackVarying(int program, int index, int bufSize, IntBuffer length, IntBuffer size, IntBuffer type, ByteBuffer name);

  /** Entry point to C language function: <code> void {@native glGetTransformFeedbackVarying}(GLuint program, GLuint index, GLsizei bufSize, GLsizei *  length, GLsizei *  size, GLenum *  type, GLchar *  name) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_transform_feedback</code>, <code>GL_EXT_transform_feedback</code><br>Alias for: <code>glGetTransformFeedbackVaryingNV</code>, <code>glGetTransformFeedbackVaryingEXT</code>   */
  public void glGetTransformFeedbackVarying(int program, int index, int bufSize, int[] length, int length_offset, int[] size, int size_offset, int[] type, int type_offset, byte[] name, int name_offset);

  /** Entry point to C language function: <code> void {@native glBeginConditionalRender}(GLuint id, GLenum mode) </code> <br>Part of <code>GL_VERSION_3_0</code>, <code>GL_NV_conditional_render</code><br>Alias for: <code>glBeginConditionalRenderNV</code>   */
  public void glBeginConditionalRender(int id, int mode);

  /** Entry point to C language function: <code> void {@native glEndConditionalRender}(void) </code> <br>Part of <code>GL_VERSION_3_0</code>, <code>GL_NV_conditional_render</code><br>Alias for: <code>glEndConditionalRenderNV</code>   */
  public void glEndConditionalRender();

  /** Entry point to C language function: <code> void {@native glVertexAttribIPointer}(GLuint index, GLint size, GLenum type, GLsizei stride, const void *  pointer) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glVertexAttribIPointerEXT</code>   */
  public void glVertexAttribIPointer(int index, int size, int type, int stride, long pointer_buffer_offset);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribIiv}(GLuint index, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glGetVertexAttribIivEXT</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetVertexAttribIiv(int index, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribIiv}(GLuint index, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glGetVertexAttribIivEXT</code>   */
  public void glGetVertexAttribIiv(int index, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribIuiv}(GLuint index, GLenum pname, GLuint *  params) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glGetVertexAttribIuivEXT</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetVertexAttribIuiv(int index, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribIuiv}(GLuint index, GLenum pname, GLuint *  params) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glGetVertexAttribIuivEXT</code>   */
  public void glGetVertexAttribIuiv(int index, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4i}(GLuint index, GLint x, GLint y, GLint z, GLint w) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glVertexAttribI4iEXT</code>   */
  public void glVertexAttribI4i(int index, int x, int y, int z, int w);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4ui}(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glVertexAttribI4uiEXT</code>   */
  public void glVertexAttribI4ui(int index, int x, int y, int z, int w);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4iv}(GLuint index, const GLint *  v) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glVertexAttribI4ivEXT</code>
      @param v a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexAttribI4iv(int index, IntBuffer v);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4iv}(GLuint index, const GLint *  v) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glVertexAttribI4ivEXT</code>   */
  public void glVertexAttribI4iv(int index, int[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4uiv}(GLuint index, const GLuint *  v) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glVertexAttribI4uivEXT</code>
      @param v a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexAttribI4uiv(int index, IntBuffer v);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4uiv}(GLuint index, const GLuint *  v) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_vertex_program4</code><br>Alias for: <code>glVertexAttribI4uivEXT</code>   */
  public void glVertexAttribI4uiv(int index, int[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glGetUniformuiv}(GLuint program, GLint location, GLuint *  params) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glGetUniformuivEXT</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetUniformuiv(int program, int location, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetUniformuiv}(GLuint program, GLint location, GLuint *  params) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glGetUniformuivEXT</code>   */
  public void glGetUniformuiv(int program, int location, int[] params, int params_offset);

  /** Entry point to C language function: <code> GLint {@native glGetFragDataLocation}(GLuint program, const GLchar *  name) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glGetFragDataLocationEXT</code>   */
  public int glGetFragDataLocation(int program, String name);

  /** Entry point to C language function: <code> void {@native glUniform1ui}(GLint location, GLuint v0) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform1uiEXT</code>   */
  public void glUniform1ui(int location, int v0);

  /** Entry point to C language function: <code> void {@native glUniform2ui}(GLint location, GLuint v0, GLuint v1) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform2uiEXT</code>   */
  public void glUniform2ui(int location, int v0, int v1);

  /** Entry point to C language function: <code> void {@native glUniform3ui}(GLint location, GLuint v0, GLuint v1, GLuint v2) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform3uiEXT</code>   */
  public void glUniform3ui(int location, int v0, int v1, int v2);

  /** Entry point to C language function: <code> void {@native glUniform4ui}(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform4uiEXT</code>   */
  public void glUniform4ui(int location, int v0, int v1, int v2, int v3);

  /** Entry point to C language function: <code> void {@native glUniform1uiv}(GLint location, GLsizei count, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform1uivEXT</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform1uiv(int location, int count, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glUniform1uiv}(GLint location, GLsizei count, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform1uivEXT</code>   */
  public void glUniform1uiv(int location, int count, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniform2uiv}(GLint location, GLsizei count, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform2uivEXT</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform2uiv(int location, int count, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glUniform2uiv}(GLint location, GLsizei count, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform2uivEXT</code>   */
  public void glUniform2uiv(int location, int count, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniform3uiv}(GLint location, GLsizei count, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform3uivEXT</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform3uiv(int location, int count, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glUniform3uiv}(GLint location, GLsizei count, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform3uivEXT</code>   */
  public void glUniform3uiv(int location, int count, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniform4uiv}(GLint location, GLsizei count, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform4uivEXT</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform4uiv(int location, int count, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glUniform4uiv}(GLint location, GLsizei count, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_gpu_shader4</code><br>Alias for: <code>glUniform4uivEXT</code>   */
  public void glUniform4uiv(int location, int count, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glClearBufferiv}(GLenum buffer, GLint drawbuffer, const GLint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code><br>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glClearBufferiv(int buffer, int drawbuffer, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glClearBufferiv}(GLenum buffer, GLint drawbuffer, const GLint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code><br>   */
  public void glClearBufferiv(int buffer, int drawbuffer, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glClearBufferuiv}(GLenum buffer, GLint drawbuffer, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code><br>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glClearBufferuiv(int buffer, int drawbuffer, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glClearBufferuiv}(GLenum buffer, GLint drawbuffer, const GLuint *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code><br>   */
  public void glClearBufferuiv(int buffer, int drawbuffer, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glClearBufferfv}(GLenum buffer, GLint drawbuffer, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code><br>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glClearBufferfv(int buffer, int drawbuffer, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glClearBufferfv}(GLenum buffer, GLint drawbuffer, const GLfloat *  value) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code><br>   */
  public void glClearBufferfv(int buffer, int drawbuffer, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glClearBufferfi}(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code><br>   */
  public void glClearBufferfi(int buffer, int drawbuffer, float depth, int stencil);

  /** Entry point to C language function: <code> const GLubyte *  {@native glGetStringi}(GLenum name, GLuint index) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code><br>   */
  public String glGetStringi(int name, int index);

  /** Entry point to C language function: <code> void {@native glBlitFramebuffer}(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_NV_framebuffer_blit</code>, <code>GL_EXT_framebuffer_blit</code>, <code>GL_ANGLE_framebuffer_blit</code><br>Alias for: <code>glBlitFramebufferNV</code>, <code>glBlitFramebufferEXT</code>, <code>glBlitFramebufferANGLE</code>   */
  public void glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);

  /** Entry point to C language function: <code> void {@native glFramebufferTextureLayer}(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_framebuffer_object</code>, <code>GL_VERSION_3_0</code>, <code>GL_EXT_texture_array</code>, <code>GL_NV_geometry_program4</code>, <code>GL_ARB_geometry_shader4</code><br>Alias for: <code>glFramebufferTextureLayerEXT</code>, <code>glFramebufferTextureLayerARB</code>   */
  public void glFramebufferTextureLayer(int target, int attachment, int texture, int level, int layer);

  /** Entry point to C language function: <code> void {@native glBindVertexArray}(GLuint array) </code> <br>Part of <code>GL_ARB_vertex_array_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_APPLE_vertex_array_object</code>, <code>GL_OES_vertex_array_object</code><br>Alias for: <code>glBindVertexArrayAPPLE</code>, <code>glBindVertexArrayOES</code>   */
  public void glBindVertexArray(int array);

  /** Entry point to C language function: <code> void {@native glDeleteVertexArrays}(GLsizei n, const GLuint *  arrays) </code> <br>Part of <code>GL_ARB_vertex_array_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_APPLE_vertex_array_object</code>, <code>GL_OES_vertex_array_object</code><br>Alias for: <code>glDeleteVertexArraysAPPLE</code>, <code>glDeleteVertexArraysOES</code>
      @param arrays a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDeleteVertexArrays(int n, IntBuffer arrays);

  /** Entry point to C language function: <code> void {@native glDeleteVertexArrays}(GLsizei n, const GLuint *  arrays) </code> <br>Part of <code>GL_ARB_vertex_array_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_APPLE_vertex_array_object</code>, <code>GL_OES_vertex_array_object</code><br>Alias for: <code>glDeleteVertexArraysAPPLE</code>, <code>glDeleteVertexArraysOES</code>   */
  public void glDeleteVertexArrays(int n, int[] arrays, int arrays_offset);

  /** Entry point to C language function: <code> void {@native glGenVertexArrays}(GLsizei n, GLuint *  arrays) </code> <br>Part of <code>GL_ARB_vertex_array_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_APPLE_vertex_array_object</code>, <code>GL_OES_vertex_array_object</code><br>Alias for: <code>glGenVertexArraysAPPLE</code>, <code>glGenVertexArraysOES</code>
      @param arrays a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGenVertexArrays(int n, IntBuffer arrays);

  /** Entry point to C language function: <code> void {@native glGenVertexArrays}(GLsizei n, GLuint *  arrays) </code> <br>Part of <code>GL_ARB_vertex_array_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_APPLE_vertex_array_object</code>, <code>GL_OES_vertex_array_object</code><br>Alias for: <code>glGenVertexArraysAPPLE</code>, <code>glGenVertexArraysOES</code>   */
  public void glGenVertexArrays(int n, int[] arrays, int arrays_offset);

  /** Entry point to C language function: <code> GLboolean {@native glIsVertexArray}(GLuint array) </code> <br>Part of <code>GL_ARB_vertex_array_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_OES_vertex_array_object</code>, <code>GL_APPLE_vertex_array_object</code><br>Alias for: <code>glIsVertexArrayOES</code>, <code>glIsVertexArrayAPPLE</code>   */
  public boolean glIsVertexArray(int array);

  /** Entry point to C language function: <code> void {@native glDrawArraysInstanced}(GLenum mode, GLint first, GLsizei count, GLsizei instancecount) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code>, <code>GL_ARB_draw_instanced</code>, <code>GL_EXT_draw_instanced</code>, <code>GL_NV_draw_instanced</code>, <code>GL_ANGLE_instanced_arrays</code><br>Alias for: <code>glDrawArraysInstancedARB</code>, <code>glDrawArraysInstancedEXT</code>, <code>glDrawArraysInstancedNV</code>, <code>glDrawArraysInstancedANGLE</code>   */
  public void glDrawArraysInstanced(int mode, int first, int count, int instancecount);

  /** Entry point to C language function: <code> void {@native glDrawElementsInstanced}(GLenum mode, GLsizei count, GLenum type, const void *  indices, GLsizei instancecount) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code>, <code>GL_ARB_draw_instanced</code>, <code>GL_EXT_draw_instanced</code>, <code>GL_ANGLE_instanced_arrays</code>, <code>GL_NV_draw_instanced</code><br>Alias for: <code>glDrawElementsInstancedARB</code>, <code>glDrawElementsInstancedEXT</code>, <code>glDrawElementsInstancedANGLE</code>, <code>glDrawElementsInstancedNV</code>   */
  public void glDrawElementsInstanced(int mode, int count, int type, long indices_buffer_offset, int instancecount);

  /** Entry point to C language function: <code> void {@native glTexBuffer}(GLenum target, GLenum internalformat, GLuint buffer) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_3_1</code>, <code>GL_OES_texture_buffer</code>, <code>GL_ARB_texture_buffer_object</code>, <code>GL_EXT_texture_buffer</code>, <code>GL_EXT_texture_buffer_object</code><br>Alias for: <code>glTexBufferOES</code>, <code>glTexBufferARB</code>, <code>glTexBufferEXT</code>   */
  public void glTexBuffer(int target, int internalformat, int buffer);

  /** Entry point to C language function: <code> void {@native glCopyBufferSubData}(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code>, <code>GL_ARB_copy_buffer</code>, <code>GL_NV_copy_buffer</code><br>Alias for: <code>glCopyBufferSubDataNV</code>   */
  public void glCopyBufferSubData(int readTarget, int writeTarget, long readOffset, long writeOffset, long size);

  /** Entry point to C language function: <code> void {@native glGetUniformIndices}(GLuint program, GLsizei uniformCount, const GLchar * const  *  uniformNames, GLuint *  uniformIndices) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>
      @param uniformIndices a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetUniformIndices(int program, int uniformCount, String[] uniformNames, IntBuffer uniformIndices);

  /** Entry point to C language function: <code> void {@native glGetUniformIndices}(GLuint program, GLsizei uniformCount, const GLchar * const  *  uniformNames, GLuint *  uniformIndices) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>   */
  public void glGetUniformIndices(int program, int uniformCount, String[] uniformNames, int[] uniformIndices, int uniformIndices_offset);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformsiv}(GLuint program, GLsizei uniformCount, const GLuint *  uniformIndices, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>
      @param uniformIndices a direct or array-backed {@link java.nio.IntBuffer}
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetActiveUniformsiv(int program, int uniformCount, IntBuffer uniformIndices, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformsiv}(GLuint program, GLsizei uniformCount, const GLuint *  uniformIndices, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>   */
  public void glGetActiveUniformsiv(int program, int uniformCount, int[] uniformIndices, int uniformIndices_offset, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> GLuint {@native glGetUniformBlockIndex}(GLuint program, const GLchar *  uniformBlockName) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>   */
  public int glGetUniformBlockIndex(int program, String uniformBlockName);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformBlockiv}(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformBlockiv}(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>   */
  public void glGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformBlockName}(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *  length, GLchar *  uniformBlockName) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param uniformBlockName a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetActiveUniformBlockName(int program, int uniformBlockIndex, int bufSize, IntBuffer length, ByteBuffer uniformBlockName);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformBlockName}(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *  length, GLchar *  uniformBlockName) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>   */
  public void glGetActiveUniformBlockName(int program, int uniformBlockIndex, int bufSize, int[] length, int length_offset, byte[] uniformBlockName, int uniformBlockName_offset);

  /** Entry point to C language function: <code> void {@native glUniformBlockBinding}(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding) </code> <br>Part of <code>GL_ARB_uniform_buffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code><br>   */
  public void glUniformBlockBinding(int program, int uniformBlockIndex, int uniformBlockBinding);

  /** Entry point to C language function: <code> void {@native glVertexAttribDivisor}(GLuint index, GLuint divisor) </code> <br>Part of <code>GL_VERSION_3_3</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_NV_instanced_arrays</code>, <code>GL_ANGLE_instanced_arrays</code>, <code>GL_ARB_instanced_arrays</code>, <code>GL_EXT_instanced_arrays</code><br>Alias for: <code>glVertexAttribDivisorNV</code>, <code>glVertexAttribDivisorANGLE</code>, <code>glVertexAttribDivisorARB</code>, <code>glVertexAttribDivisorEXT</code>   */
  public void glVertexAttribDivisor(int index, int divisor);

  /** Entry point to C language function: <code> void {@native glMinSampleShading}(GLfloat value) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_OES_sample_shading</code>, <code>GL_ARB_sample_shading</code><br>Alias for: <code>glMinSampleShadingOES</code>, <code>glMinSampleShadingARB</code>   */
  public void glMinSampleShading(float value);

  /** Entry point to C language function: <code> void {@native glBlendEquationi}(GLuint buf, GLenum mode) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_OES_draw_buffers_indexed</code>, <code>GL_ARB_draw_buffers_blend</code>, <code>GL_EXT_draw_buffers_indexed</code><br>Alias for: <code>glBlendEquationiOES</code>, <code>glBlendEquationiARB</code>, <code>glBlendEquationiEXT</code>   */
  public void glBlendEquationi(int buf, int mode);

  /** Entry point to C language function: <code> void {@native glBlendEquationSeparatei}(GLuint buf, GLenum modeRGB, GLenum modeAlpha) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_ARB_draw_buffers_blend</code>, <code>GL_EXT_draw_buffers_indexed</code>, <code>GL_OES_draw_buffers_indexed</code><br>Alias for: <code>glBlendEquationSeparateiARB</code>, <code>glBlendEquationSeparateiEXT</code>, <code>glBlendEquationSeparateiOES</code>   */
  public void glBlendEquationSeparatei(int buf, int modeRGB, int modeAlpha);

  /** Entry point to C language function: <code> void {@native glBlendFunci}(GLuint buf, GLenum src, GLenum dst) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_ARB_draw_buffers_blend</code>, <code>GL_EXT_draw_buffers_indexed</code>, <code>GL_OES_draw_buffers_indexed</code><br>Alias for: <code>glBlendFunciARB</code>, <code>glBlendFunciEXT</code>, <code>glBlendFunciOES</code>   */
  public void glBlendFunci(int buf, int src, int dst);

  /** Entry point to C language function: <code> void {@native glBlendFuncSeparatei}(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_0</code>, <code>GL_OES_draw_buffers_indexed</code>, <code>GL_ARB_draw_buffers_blend</code>, <code>GL_EXT_draw_buffers_indexed</code><br>Alias for: <code>glBlendFuncSeparateiOES</code>, <code>glBlendFuncSeparateiARB</code>, <code>glBlendFuncSeparateiEXT</code>   */
  public void glBlendFuncSeparatei(int buf, int srcRGB, int dstRGB, int srcAlpha, int dstAlpha);

  /** Entry point to C language function: <code> void {@native glBindTransformFeedback}(GLenum target, GLuint id) </code> <br>Part of <code>GL_ARB_transform_feedback2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>glBindTransformFeedbackNV</code>   */
  public void glBindTransformFeedback(int target, int id);

  /** Entry point to C language function: <code> void {@native glDeleteTransformFeedbacks}(GLsizei n, const GLuint *  ids) </code> <br>Part of <code>GL_ARB_transform_feedback2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>glDeleteTransformFeedbacksNV</code>
      @param ids a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDeleteTransformFeedbacks(int n, IntBuffer ids);

  /** Entry point to C language function: <code> void {@native glDeleteTransformFeedbacks}(GLsizei n, const GLuint *  ids) </code> <br>Part of <code>GL_ARB_transform_feedback2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>glDeleteTransformFeedbacksNV</code>   */
  public void glDeleteTransformFeedbacks(int n, int[] ids, int ids_offset);

  /** Entry point to C language function: <code> void {@native glGenTransformFeedbacks}(GLsizei n, GLuint *  ids) </code> <br>Part of <code>GL_ARB_transform_feedback2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>glGenTransformFeedbacksNV</code>
      @param ids a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGenTransformFeedbacks(int n, IntBuffer ids);

  /** Entry point to C language function: <code> void {@native glGenTransformFeedbacks}(GLsizei n, GLuint *  ids) </code> <br>Part of <code>GL_ARB_transform_feedback2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>glGenTransformFeedbacksNV</code>   */
  public void glGenTransformFeedbacks(int n, int[] ids, int ids_offset);

  /** Entry point to C language function: <code> GLboolean {@native glIsTransformFeedback}(GLuint id) </code> <br>Part of <code>GL_ARB_transform_feedback2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>glIsTransformFeedbackNV</code>   */
  public boolean glIsTransformFeedback(int id);

  /** Entry point to C language function: <code> void {@native glPauseTransformFeedback}(void) </code> <br>Part of <code>GL_ARB_transform_feedback2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>glPauseTransformFeedbackNV</code>   */
  public void glPauseTransformFeedback();

  /** Entry point to C language function: <code> void {@native glResumeTransformFeedback}(void) </code> <br>Part of <code>GL_ARB_transform_feedback2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_4_0</code>, <code>GL_NV_transform_feedback2</code><br>Alias for: <code>glResumeTransformFeedbackNV</code>   */
  public void glResumeTransformFeedback();

  /** Entry point to C language function: <code> void {@native glGetInternalformativ}(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *  params) </code> <br>Part of <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_internalformat_query</code><br>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetInternalformativ(int target, int internalformat, int pname, int bufSize, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetInternalformativ}(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *  params) </code> <br>Part of <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_internalformat_query</code><br>   */
  public void glGetInternalformativ(int target, int internalformat, int pname, int bufSize, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glBindImageTexture}(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format) </code> <br>Part of <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>glBindImageTextureEXT</code>   */
  public void glBindImageTexture(int unit, int texture, int level, boolean layered, int layer, int access, int format);

  /** Entry point to C language function: <code> void {@native glMemoryBarrier}(GLbitfield barriers) </code> <br>Part of <code>GL_ARB_shader_image_load_store</code>, <code>GL_VERSION_4_2</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_EXT_shader_image_load_store</code><br>Alias for: <code>glMemoryBarrierEXT</code>   */
  public void glMemoryBarrier(int barriers);

  /** Entry point to C language function: <code> void {@native glFramebufferParameteri}(GLenum target, GLenum pname, GLint param) </code> <br>Part of <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code><br>   */
  public void glFramebufferParameteri(int target, int pname, int param);

  /** Entry point to C language function: <code> void {@native glGetFramebufferParameteriv}(GLenum target, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code>, <code>GL_EXT_direct_state_access</code><br>Alias for: <code>glGetFramebufferParameterivEXT</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetFramebufferParameteriv(int target, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetFramebufferParameteriv}(GLenum target, GLenum pname, GLint *  params) </code> <br>Part of <code>GL_ARB_framebuffer_no_attachments</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code>, <code>GL_EXT_direct_state_access</code><br>Alias for: <code>glGetFramebufferParameterivEXT</code>   */
  public void glGetFramebufferParameteriv(int target, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glInvalidateFramebuffer}(GLenum target, GLsizei numAttachments, const GLenum *  attachments) </code> <br>Part of <code>GL_ARB_invalidate_subdata</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code><br>
      @param attachments a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glInvalidateFramebuffer(int target, int numAttachments, IntBuffer attachments);

  /** Entry point to C language function: <code> void {@native glInvalidateFramebuffer}(GLenum target, GLsizei numAttachments, const GLenum *  attachments) </code> <br>Part of <code>GL_ARB_invalidate_subdata</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code><br>   */
  public void glInvalidateFramebuffer(int target, int numAttachments, int[] attachments, int attachments_offset);

  /** Entry point to C language function: <code> void {@native glInvalidateSubFramebuffer}(GLenum target, GLsizei numAttachments, const GLenum *  attachments, GLint x, GLint y, GLsizei width, GLsizei height) </code> <br>Part of <code>GL_ARB_invalidate_subdata</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code><br>
      @param attachments a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glInvalidateSubFramebuffer(int target, int numAttachments, IntBuffer attachments, int x, int y, int width, int height);

  /** Entry point to C language function: <code> void {@native glInvalidateSubFramebuffer}(GLenum target, GLsizei numAttachments, const GLenum *  attachments, GLint x, GLint y, GLsizei width, GLsizei height) </code> <br>Part of <code>GL_ARB_invalidate_subdata</code>, <code>GL_VERSION_4_3</code>, <code>GL_ES_VERSION_3_0</code><br>   */
  public void glInvalidateSubFramebuffer(int target, int numAttachments, int[] attachments, int attachments_offset, int x, int y, int width, int height);

  /** Entry point to C language function: <code> void {@native glTexStorage2DMultisample}(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) </code> <br>Part of <code>GL_ARB_texture_storage_multisample</code>, <code>GL_ES_VERSION_3_1</code>, <code>GL_VERSION_4_3</code><br>   */
  public void glTexStorage2DMultisample(int target, int samples, int internalformat, int width, int height, boolean fixedsamplelocations);

  /** Entry point to C language function: <code> void {@native glTexStorage3DMultisample}(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) </code> <br>Part of <code>GL_ARB_texture_storage_multisample</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_VERSION_4_3</code>, <code>GL_OES_texture_storage_multisample_2d_array</code><br>Alias for: <code>glTexStorage3DMultisampleOES</code>   */
  public void glTexStorage3DMultisample(int target, int samples, int internalformat, int width, int height, int depth, boolean fixedsamplelocations);

  /** Entry point to C language function: <code> void {@native glGetnUniformuiv}(GLuint program, GLint location, GLsizei bufSize, GLuint *  params) </code> <br>Part of <code>GL_VERSION_4_5</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_KHR_robustness</code>, <code>GL_ARB_robustness</code><br>Alias for: <code>glGetnUniformuivKHR</code>, <code>glGetnUniformuivARB</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetnUniformuiv(int program, int location, int bufSize, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetnUniformuiv}(GLuint program, GLint location, GLsizei bufSize, GLuint *  params) </code> <br>Part of <code>GL_VERSION_4_5</code>, <code>GL_ES_VERSION_3_2</code>, <code>GL_KHR_robustness</code>, <code>GL_ARB_robustness</code><br>Alias for: <code>glGetnUniformuivKHR</code>, <code>glGetnUniformuivARB</code>   */
  public void glGetnUniformuiv(int program, int location, int bufSize, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glPrimitiveBoundingBox}(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW) </code> <br>Part of <code>GL_ES_VERSION_3_2</code>, <code>GL_OES_primitive_bounding_box</code>, <code>GL_ARB_ES3_2_compatibility</code>, <code>GL_EXT_primitive_bounding_box</code><br>Alias for: <code>glPrimitiveBoundingBoxOES</code>, <code>glPrimitiveBoundingBoxARB</code>, <code>glPrimitiveBoundingBoxEXT</code>   */
  public void glPrimitiveBoundingBox(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW);

  /** Entry point to C language function: <code> void {@native glFramebufferTextureEXT}(GLenum target, GLenum attachment, GLuint texture, GLint level) </code> <br>Part of <code>GL_NV_geometry_program4</code>, <code>GL_EXT_geometry_shader</code><br>   */
  public void glFramebufferTextureEXT(int target, int attachment, int texture, int level);


  // --- Begin CustomJavaCode .cfg declarations
  
  /** Part of <code>GL_ARB_uniform_buffer_object</code> */
  public static final int GL_INVALID_INDEX = 0xFFFFFFFF ;
  
  /** Part of <code>GL_ARB_sync</code> */
  public static final long GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFFL ;
  
  public boolean isPBOPackBound();
  
  public boolean isPBOUnpackBound();
  
  // ---- End CustomJavaCode .cfg declarations

} // end of class GL2ES3
