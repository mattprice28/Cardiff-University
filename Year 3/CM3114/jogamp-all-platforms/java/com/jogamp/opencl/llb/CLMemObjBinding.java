/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/JavaEmitter.java on Sat Oct 10 04:56:53 CEST 2015 ----! */

package com.jogamp.opencl.llb;

import com.jogamp.opencl.llb.impl.CLMemObjectDestructorCallback;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

 /**
  * Java bindings to OpenCL memory objects.
  * @author Michael Bien, GlueGen, et al.
  */
public interface CLMemObjBinding {

  /** CType: int */
  public static final int CL_MEM_OBJECT_ALLOCATION_FAILURE = -4;
  /** CType: int */
  public static final int CL_MEM_READ_ONLY = ( 0x1 << 0x2 );
  /** CType: int */
  public static final int CL_MEM_HOST_PTR = 0x1103;
  /** CType: int */
  public static final int CL_MAP_WRITE = ( 0x1 << 0x1 );
  /** CType: int */
  public static final int CL_MEM_WRITE_ONLY = ( 0x1 << 0x1 );
  /** CType: int */
  public static final int CL_MAP_FAILURE = -12;
  /** CType: int */
  public static final int CL_MEM_COPY_OVERLAP = -8;
  /** CType: int */
  public static final int CL_MEM_FLAGS = 0x1101;
  /** CType: int */
  public static final int CL_MEM_USE_HOST_PTR = ( 0x1 << 0x3 );
  /** CType: int */
  public static final int CL_MEM_TYPE = 0x1100;
  /** CType: int */
  public static final int CL_MEM_CONTEXT = 0x1106;
  /** CType: int */
  public static final int CL_MEM_MAP_COUNT = 0x1104;
  /** CType: int */
  public static final int CL_MEM_OFFSET = 0x1108;
  /** CType: int */
  public static final int CL_MEM_COPY_HOST_PTR = ( 0x1 << 0x5 );
  /** CType: int */
  public static final int CL_MEM_ASSOCIATED_MEMOBJECT = 0x1107;
  /** CType: int */
  public static final int CL_MEM_OBJECT_IMAGE3D = 0x10f2;
  /** CType: int */
  public static final int CL_MEM_ALLOC_HOST_PTR = ( 0x1 << 0x4 );
  /** CType: int */
  public static final int CL_MEM_OBJECT_IMAGE2D = 0x10f1;
  /** CType: int */
  public static final int CL_MEM_OBJECT_BUFFER = 0x10f0;
  /** CType: int */
  public static final int CL_MEM_REFERENCE_COUNT = 0x1105;
  /** CType: int */
  public static final int CL_MEM_READ_WRITE = ( 0x1 << 0x0 );
  /** CType: int */
  public static final int CL_MAP_READ = ( 0x1 << 0x0 );
  /** CType: int */
  public static final int CL_MEM_SIZE = 0x1102;

  /** Interface to C language function: <br> <code>cl_int {@native clRetainMemObject}(cl_mem memobj)</code><br>   */
  public int clRetainMemObject(long memobj);

  /** Interface to C language function: <br> <code>cl_int {@native clReleaseMemObject}(cl_mem memobj)</code><br>   */
  public int clReleaseMemObject(long memobj);

  /** Interface to C language function: <br> <code>cl_int {@native clGetMemObjectInfo}(cl_mem memobj, cl_mem_info param_name, size_t param_value_size, void *  param_value, size_t *  param_value_size_ret)</code><br>
      @param param_value a direct only {@link java.nio.Buffer}
      @param param_value_size_ret a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public int clGetMemObjectInfo(long memobj, int param_name, long param_value_size, Buffer param_value, PointerBuffer param_value_size_ret);


  // --- Begin CustomJavaCode .cfg declarations

  /** Interface to C language function: <br> <code> int32_t {@native clSetMemObjectDestructorCallback}(cl_mem memobj, void (CL_CALLBACK  *pfn_notify) (cl_mem memobj, void *user_data), void *user_data); </code>    */
  public int clSetMemObjectDestructorCallback(long memObjID, CLMemObjectDestructorCallback cb);
  // ---- End CustomJavaCode .cfg declarations

} // end of class CLMemObjBinding
