/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/JavaEmitter.java on Sat Oct 10 04:57:01 CEST 2015 ----! */

package com.jogamp.opencl.llb;

import com.jogamp.opencl.llb.impl.CLImageFormatImpl;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

 /**
  * Java bindings to OpenCL images.
  * @author Michael Bien, GlueGen, et al.
  */
public interface CLImageBinding extends CLMemObjBinding{

  /** CType: int */
  public static final int CL_BGRA = 0x10b6;
  /** CType: int */
  public static final int CL_SNORM_INT8 = 0x10d0;
  /** CType: int */
  public static final int CL_RGBA = 0x10b5;
  /** CType: int */
  public static final int CL_IMAGE_HEIGHT = 0x1115;
  /** CType: int */
  public static final int CL_IMAGE_SLICE_PITCH = 0x1113;
  /** CType: int */
  public static final int CL_UNORM_INT_101010 = 0x10d6;
  /** CType: int */
  public static final int CL_FLOAT = 0x10de;
  /** CType: int */
  public static final int CL_IMAGE_FORMAT_NOT_SUPPORTED = -10;
  /** CType: int */
  public static final int CL_IMAGE_DEPTH = 0x1116;
  /** CType: int */
  public static final int CL_UNORM_INT16 = 0x10d3;
  /** CType: int */
  public static final int CL_RGBx = 0x10bc;
  /** CType: int */
  public static final int CL_RGB = 0x10b4;
  /** CType: int */
  public static final int CL_UNORM_SHORT_565 = 0x10d4;
  /** CType: int */
  public static final int CL_IMAGE_FORMAT = 0x1110;
  /** CType: int */
  public static final int CL_IMAGE_ELEMENT_SIZE = 0x1111;
  /** CType: int */
  public static final int CL_ARGB = 0x10b7;
  /** CType: int */
  public static final int CL_SIGNED_INT8 = 0x10d7;
  /** CType: int */
  public static final int CL_INTENSITY = 0x10b8;
  /** CType: int */
  public static final int CL_IMAGE_FORMAT_MISMATCH = -9;
  /** CType: int */
  public static final int CL_UNSIGNED_INT32 = 0x10dc;
  /** CType: int */
  public static final int CL_R = 0x10b0;
  /** CType: int */
  public static final int CL_UNSIGNED_INT16 = 0x10db;
  /** CType: int */
  public static final int CL_UNORM_INT8 = 0x10d2;
  /** CType: int */
  public static final int CL_A = 0x10b1;
  /** CType: int */
  public static final int CL_UNORM_SHORT_555 = 0x10d5;
  /** CType: int */
  public static final int CL_RA = 0x10b3;
  /** CType: int */
  public static final int CL_RG = 0x10b2;
  /** CType: int */
  public static final int CL_Rx = 0x10ba;
  /** CType: int */
  public static final int CL_IMAGE_ROW_PITCH = 0x1112;
  /** CType: int */
  public static final int CL_SIGNED_INT16 = 0x10d8;
  /** CType: int */
  public static final int CL_LUMINANCE = 0x10b9;
  /** CType: int */
  public static final int CL_UNSIGNED_INT8 = 0x10da;
  /** CType: int */
  public static final int CL_SIGNED_INT32 = 0x10d9;
  /** CType: int */
  public static final int CL_RGx = 0x10bb;
  /** CType: int */
  public static final int CL_IMAGE_WIDTH = 0x1114;
  /** CType: int */
  public static final int CL_HALF_FLOAT = 0x10dd;
  /** CType: int */
  public static final int CL_SNORM_INT16 = 0x10d1;

  /** Interface to C language function: <br> <code>cl_mem {@native clCreateImage2D}(cl_context context, cl_mem_flags flags, const cl_image_format *  image_format, size_t image_width, size_t image_height, size_t image_row_pitch, void *  host_ptr, cl_int *  errcode_ret)</code><br>
      @param host_ptr a direct or array-backed {@link java.nio.Buffer}
      @param errcode_ret a direct or array-backed {@link java.nio.IntBuffer}   */
  public long clCreateImage2D(long context, long flags, CLImageFormatImpl image_format, long image_width, long image_height, long image_row_pitch, Buffer host_ptr, IntBuffer errcode_ret);

  /** Interface to C language function: <br> <code>cl_mem {@native clCreateImage2D}(cl_context context, cl_mem_flags flags, const cl_image_format *  image_format, size_t image_width, size_t image_height, size_t image_row_pitch, void *  host_ptr, cl_int *  errcode_ret)</code><br>
      @param host_ptr a direct or array-backed {@link java.nio.Buffer}   */
  public long clCreateImage2D(long context, long flags, CLImageFormatImpl image_format, long image_width, long image_height, long image_row_pitch, Buffer host_ptr, int[] errcode_ret, int errcode_ret_offset);

  /** Interface to C language function: <br> <code>cl_mem {@native clCreateImage3D}(cl_context context, cl_mem_flags flags, const cl_image_format *  image_format, size_t image_width, size_t image_height, size_t image_depth, size_t image_row_pitch, size_t image_slice_pitch, void *  host_ptr, cl_int *  errcode_ret)</code><br>
      @param host_ptr a direct or array-backed {@link java.nio.Buffer}
      @param errcode_ret a direct or array-backed {@link java.nio.IntBuffer}   */
  public long clCreateImage3D(long context, long flags, CLImageFormatImpl image_format, long image_width, long image_height, long image_depth, long image_row_pitch, long image_slice_pitch, Buffer host_ptr, IntBuffer errcode_ret);

  /** Interface to C language function: <br> <code>cl_mem {@native clCreateImage3D}(cl_context context, cl_mem_flags flags, const cl_image_format *  image_format, size_t image_width, size_t image_height, size_t image_depth, size_t image_row_pitch, size_t image_slice_pitch, void *  host_ptr, cl_int *  errcode_ret)</code><br>
      @param host_ptr a direct or array-backed {@link java.nio.Buffer}   */
  public long clCreateImage3D(long context, long flags, CLImageFormatImpl image_format, long image_width, long image_height, long image_depth, long image_row_pitch, long image_slice_pitch, Buffer host_ptr, int[] errcode_ret, int errcode_ret_offset);

  /** Interface to C language function: <br> <code>cl_int {@native clGetImageInfo}(cl_mem image, cl_image_info param_name, size_t param_value_size, void *  param_value, size_t *  param_value_size_ret)</code><br>
      @param param_value a direct only {@link java.nio.Buffer}
      @param param_value_size_ret a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public int clGetImageInfo(long image, int param_name, long param_value_size, Buffer param_value, PointerBuffer param_value_size_ret);


} // end of class CLImageBinding
