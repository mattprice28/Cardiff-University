/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/JavaEmitter.java on Sat Oct 10 03:10:25 CEST 2015 ----! */


package jogamp.nativewindow.jawt.x11;

import java.nio.*;

import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import jogamp.common.os.MachineDataInfoRuntime;

import java.security.*;
import jogamp.nativewindow.jawt.*;
import com.jogamp.common.os.Platform;
import com.jogamp.common.util.VersionNumber;

public class JAWT_X11DrawingSurfaceInfo implements JAWT_PlatformInfo {

  StructAccessor accessor;

  private static final int mdIdx = MachineDataInfoRuntime.getStatic().ordinal();
  private final MachineDataInfo md;

  private static final int[] JAWT_X11DrawingSurfaceInfo_size = new int[] { 24 /* ARM_MIPS_32 */, 24 /* X86_32_UNIX */, 24 /* X86_32_MACOS */, 24 /* PPC_32_UNIX */, 24 /* SPARC_32_SUNOS */, 24 /* X86_32_WINDOWS */, 48 /* LP64_UNIX */, 48 /* X86_64_WINDOWS */  };
  private static final int[] drawable_offset = new int[] { 0 /* ARM_MIPS_32 */, 0 /* X86_32_UNIX */, 0 /* X86_32_MACOS */, 0 /* PPC_32_UNIX */, 0 /* SPARC_32_SUNOS */, 0 /* X86_32_WINDOWS */, 0 /* LP64_UNIX */, 0 /* X86_64_WINDOWS */ };
//private static final int[] drawable_size = new int[] { 4 /* ARM_MIPS_32 */, 4 /* X86_32_UNIX */, 4 /* X86_32_MACOS */, 4 /* PPC_32_UNIX */, 4 /* SPARC_32_SUNOS */, 4 /* X86_32_WINDOWS */, 8 /* LP64_UNIX */, 8 /* X86_64_WINDOWS */  };
  private static final int[] display_offset = new int[] { 4 /* ARM_MIPS_32 */, 4 /* X86_32_UNIX */, 4 /* X86_32_MACOS */, 4 /* PPC_32_UNIX */, 4 /* SPARC_32_SUNOS */, 4 /* X86_32_WINDOWS */, 8 /* LP64_UNIX */, 8 /* X86_64_WINDOWS */ };
//private static final int[] display_size = new int[] { 4 /* ARM_MIPS_32 */, 4 /* X86_32_UNIX */, 4 /* X86_32_MACOS */, 4 /* PPC_32_UNIX */, 4 /* SPARC_32_SUNOS */, 4 /* X86_32_WINDOWS */, 8 /* LP64_UNIX */, 8 /* X86_64_WINDOWS */  };
  private static final int[] visualID_offset = new int[] { 8 /* ARM_MIPS_32 */, 8 /* X86_32_UNIX */, 8 /* X86_32_MACOS */, 8 /* PPC_32_UNIX */, 8 /* SPARC_32_SUNOS */, 8 /* X86_32_WINDOWS */, 16 /* LP64_UNIX */, 16 /* X86_64_WINDOWS */ };
//private static final int[] visualID_size = new int[] { 4 /* ARM_MIPS_32 */, 4 /* X86_32_UNIX */, 4 /* X86_32_MACOS */, 4 /* PPC_32_UNIX */, 4 /* SPARC_32_SUNOS */, 4 /* X86_32_WINDOWS */, 8 /* LP64_UNIX */, 4 /* X86_64_WINDOWS */  };
  private static final int[] colormapID_offset = new int[] { 12 /* ARM_MIPS_32 */, 12 /* X86_32_UNIX */, 12 /* X86_32_MACOS */, 12 /* PPC_32_UNIX */, 12 /* SPARC_32_SUNOS */, 12 /* X86_32_WINDOWS */, 24 /* LP64_UNIX */, 24 /* X86_64_WINDOWS */ };
//private static final int[] colormapID_size = new int[] { 4 /* ARM_MIPS_32 */, 4 /* X86_32_UNIX */, 4 /* X86_32_MACOS */, 4 /* PPC_32_UNIX */, 4 /* SPARC_32_SUNOS */, 4 /* X86_32_WINDOWS */, 8 /* LP64_UNIX */, 8 /* X86_64_WINDOWS */  };
  private static final int[] depth_offset = new int[] { 16 /* ARM_MIPS_32 */, 16 /* X86_32_UNIX */, 16 /* X86_32_MACOS */, 16 /* PPC_32_UNIX */, 16 /* SPARC_32_SUNOS */, 16 /* X86_32_WINDOWS */, 32 /* LP64_UNIX */, 32 /* X86_64_WINDOWS */ };
//private static final int[] depth_size = new int[] { 4 /* ARM_MIPS_32 */, 4 /* X86_32_UNIX */, 4 /* X86_32_MACOS */, 4 /* PPC_32_UNIX */, 4 /* SPARC_32_SUNOS */, 4 /* X86_32_WINDOWS */, 4 /* LP64_UNIX */, 4 /* X86_64_WINDOWS */  };

  public static int size() {
    return JAWT_X11DrawingSurfaceInfo_size[mdIdx];
  }

  public static JAWT_X11DrawingSurfaceInfo create() {
    return create(Buffers.newDirectByteBuffer(size()));
  }

  public static JAWT_X11DrawingSurfaceInfo create(java.nio.ByteBuffer buf) {
      return new JAWT_X11DrawingSurfaceInfo(buf);
  }

  JAWT_X11DrawingSurfaceInfo(java.nio.ByteBuffer buf) {
    md = MachineDataInfo.StaticConfig.values()[mdIdx].md;
    accessor = new StructAccessor(buf);
  }

  public java.nio.ByteBuffer getBuffer() {
    return accessor.getBuffer();
  }

  /** Setter for native field <code>drawable</code>: CType[(PointerType) typedef 'Drawable' -> (struct null) * , size [fixed false, lnx64 8], [const[false], pointer*1]], with array length of <code>1</code> */
  public JAWT_X11DrawingSurfaceInfo setDrawable(long val) {
    accessor.setLongAt(drawable_offset[mdIdx], val, md.pointerSizeInBytes());
    return this;
  }

  /** Getter for native field <code>drawable</code>: CType[(PointerType) typedef 'Drawable' -> (struct null) * , size [fixed false, lnx64 8], [const[false], pointer*1]], with array length of <code>1</code> */
  public long getDrawable() {
    return accessor.getLongAt(drawable_offset[mdIdx], md.pointerSizeInBytes());
  }


  /** Setter for native field <code>display</code>: CType[(PointerType) 'Display *' -> (Display) * , size [fixed false, lnx64 8], [const[false], pointer*1]], with array length of <code>1</code> */
  public JAWT_X11DrawingSurfaceInfo setDisplay(long val) {
    accessor.setLongAt(display_offset[mdIdx], val, md.pointerSizeInBytes());
    return this;
  }

  /** Getter for native field <code>display</code>: CType[(PointerType) 'Display *' -> (Display) * , size [fixed false, lnx64 8], [const[false], pointer*1]], with array length of <code>1</code> */
  public long getDisplay() {
    return accessor.getLongAt(display_offset[mdIdx], md.pointerSizeInBytes());
  }


  /** Setter for native field <code>visualID</code>: CType[(IntType) typedef 'VisualID', size [fixed false, lnx64 8], [const[false], int]] */
  public JAWT_X11DrawingSurfaceInfo setVisualID(long val) {
    accessor.setLongAt(visualID_offset[mdIdx], val, md.longSizeInBytes());
    return this;
  }

  /** Getter for native field <code>visualID</code>: CType[(IntType) typedef 'VisualID', size [fixed false, lnx64 8], [const[false], int]] */
  public long getVisualID() {
    return accessor.getLongAt(visualID_offset[mdIdx], md.longSizeInBytes());
  }

  /** Setter for native field <code>colormapID</code>: CType[(PointerType) typedef 'Colormap' -> (struct null) * , size [fixed false, lnx64 8], [const[false], pointer*1]], with array length of <code>1</code> */
  public JAWT_X11DrawingSurfaceInfo setColormapID(long val) {
    accessor.setLongAt(colormapID_offset[mdIdx], val, md.pointerSizeInBytes());
    return this;
  }

  /** Getter for native field <code>colormapID</code>: CType[(PointerType) typedef 'Colormap' -> (struct null) * , size [fixed false, lnx64 8], [const[false], pointer*1]], with array length of <code>1</code> */
  public long getColormapID() {
    return accessor.getLongAt(colormapID_offset[mdIdx], md.pointerSizeInBytes());
  }


  /** Setter for native field <code>depth</code>: CType[(IntType) 'int', size [fixed false, lnx64 4], [const[false], int]] */
  public JAWT_X11DrawingSurfaceInfo setDepth(int val) {
    accessor.setIntAt(depth_offset[mdIdx], val, md.intSizeInBytes());
    return this;
  }

  /** Getter for native field <code>depth</code>: CType[(IntType) 'int', size [fixed false, lnx64 4], [const[false], int]] */
  public int getDepth() {
    return accessor.getIntAt(depth_offset[mdIdx], md.intSizeInBytes());
  }


}
