/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Sat Oct 10 03:20:16 CEST 2015 ----! */

package jogamp.opengl.windows.wgl;

import java.util.*;
import com.jogamp.opengl.*;
import com.jogamp.opengl.fixedfunc.*;
import jogamp.opengl.*;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

public interface WGLExt {

  /** <code>WGL_ARB_create_context_robustness</code> - CType: int */
  public static final int WGL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_DX_interop = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int BI_RLE8 = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int BI_RLE4 = 0x2;
  /** <code>WGL_EXT_multisample</code> - CType: int */
  public static final int WGL_SAMPLE_BUFFERS_EXT = 0x2041;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x2082;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_make_current_read = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_pixel_format_float = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_INVALID_WINDOW_HANDLE = 0x578;
  /** <code>WGL_I3D_image_buffer</code> - CType: int */
  public static final int WGL_IMAGE_BUFFER_LOCK_I3D = 0x2;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_NEED_PALETTE_ARB = 0x2004;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_BRUSH = 0x2;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV = 0x20c6;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_BITMAP = 0x7;
  /** <code>WGL_I3D_genlock</code> - CType: int */
  public static final int WGL_GENLOCK_SOURCE_EDGE_RISING_I3D = 0x204b;
  /** Part of CORE DEF - CType: int */
  public static final int SW_SHOWMINNOACTIVE = 0x7;
  /** <code>WGL_3DL_stereo_control</code> - CType: int */
  public static final int WGL_STEREO_EMITTER_ENABLE_3DL = 0x2055;
  /** Part of CORE DEF - CType: int */
  public static final int SW_MINIMIZE = 0x6;
  /** Part of CORE DEF - CType: int */
  public static final int SW_RESTORE = 0x9;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_buffer_region = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_pbuffer = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_EXTPEN = 0xb;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_NUMBER_OVERLAYS_EXT = 0x2008;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX2_ARB = 0x2089;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_STENCIL_BITS_ARB = 0x2023;
  /** <code>WGL_NV_video_capture</code> - CType: int */
  public static final int WGL_UNIQUE_ID_NV = 0x20ce;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_TRANSPARENT_VALUE_EXT = 0x200b;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_DRAW_TO_WINDOW = 0x4;
  /** <code>WGL_ARB_create_context_robustness</code> - CType: int */
  public static final int WGL_NO_RESET_NOTIFICATION_ARB = 0x8261;
  /** Part of CORE DEF - CType: int */
  public static final int BI_RGB = 0x0;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_COPY_ARB = 0x2029;
  /** <code>WGL_ARB_create_context</code> - CType: int */
  public static final int WGL_CONTEXT_LAYER_PLANE_ARB = 0x2093;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SUPPORT_GDI_ARB = 0x200f;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_vertex_array_range = 0x1;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX9_ARB = 0x2090;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_context_flush_control = 0x1;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_FULL_ACCELERATION_ARB = 0x2027;
  /** Part of CORE DEF - CType: int */
  public static final int DIB_PAL_COLORS = 0x1;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_GREEN_BITS_ARB = 0x2017;
  /** <code>WGL_I3D_genlock</code> - CType: int */
  public static final int WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D = 0x2046;
  /** <code>WGL_EXT_pbuffer</code> - CType: int */
  public static final int WGL_MAX_PBUFFER_HEIGHT_EXT = 0x2030;
  /** <code>WGL_NV_float_buffer</code> - CType: int */
  public static final int WGL_TEXTURE_FLOAT_RGBA_NV = 0x20b8;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_GREEN_BITS_EXT = 0x201f;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_float_buffer = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_3DL_stereo_control = 0x1;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_1D_ARB = 0x2079;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_GREEN_BITS_ARB = 0x201f;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_BIND_TO_VIDEO_RGBA_NV = 0x20c1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_extensions_string = 0x1;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX3_ARB = 0x208a;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_MAIN_PLANE = 0x0;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_BIND_TO_VIDEO_RGB_NV = 0x20c0;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_AUX_BUFFERS_ARB = 0x2024;
  /** <code>WGL_NV_multisample_coverage</code> - CType: int */
  public static final int WGL_COLOR_SAMPLES_NV = 0x20b9;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_framebuffer_sRGB = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_present_video = 0x1;
  /** <code>WGL_ARB_context_flush_control</code> - CType: int */
  public static final int WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB = 0x0;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_NUMBER_PIXEL_FORMATS_ARB = 0x2000;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_GREEN_BITS_EXT = 0x2017;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_TYPE_COLORINDEX = 0x1;
  /** <code>WGL_NV_multisample_coverage</code> - CType: int */
  public static final int WGL_COVERAGE_SAMPLES_NV = 0x2042;
  /** Part of CORE DEF - CType: int */
  public static final int GLEXT_64_TYPES_DEFINED = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_OML_sync_control = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_I3D_genlock = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_3DFX_multisample = 0x1;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_NUM_SIMD_AMD = 0x21a6;
  /** <code>WGL_ARB_create_context</code> - CType: int */
  public static final int WGL_CONTEXT_DEBUG_BIT_ARB = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_DX_interop2 = 0x1;
  /** <code>WGL_ARB_create_context</code> - CType: int */
  public static final int WGL_CONTEXT_FLAGS_ARB = 0x2094;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX8_ARB = 0x208f;
  /** <code>WGL_ARB_multisample</code> - CType: int */
  public static final int WGL_SAMPLE_BUFFERS_ARB = 0x2041;
  /** <code>WGL_EXT_pbuffer</code> - CType: int */
  public static final int WGL_OPTIMAL_PBUFFER_HEIGHT_EXT = 0x2032;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_RED_SHIFT_ARB = 0x2016;
  /** <code>WGL_NV_render_depth_texture</code> - CType: int */
  public static final int WGL_DEPTH_TEXTURE_FORMAT_NV = 0x20a5;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_NUMBER_PIXEL_FORMATS_EXT = 0x2000;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_I3D_gamma = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_I3D_swap_frame_lock = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_copy_image = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_OVERLAY_PLANE = 0x1;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_NEED_PALETTE_EXT = 0x2004;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_STEREO = 0x2;
  /** <code>WGL_I3D_digital_video_control</code> - CType: int */
  public static final int WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D = 0x2053;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_GENERIC_ACCELERATED = 0x1000;
  /** <code>WGL_NV_float_buffer</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV = 0x20b4;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB = 0x2054;
  /** <code>WGL_EXT_pbuffer</code> - CType: int */
  public static final int WGL_PBUFFER_HEIGHT_EXT = 0x2035;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_WGLEXT_VERSION = 0x133795f;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ATI_pixel_format_float = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_NO_SYSTEM_RESOURCES = 0x5aa;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_framebuffer_sRGB = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_AMD_gpu_association = 0x1;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_TRANSPARENT_RED_VALUE_ARB = 0x2037;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX4_ARB = 0x208b;
  /** <code>WGL_3DFX_multisample</code> - CType: int */
  public static final int WGL_SAMPLE_BUFFERS_3DFX = 0x2060;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_STACKED_FIELDS_1_2 = 0x20cb;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_RED_SHIFT_EXT = 0x2016;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_multisample = 0x1;
  /** <code>WGL_NV_float_buffer</code> - CType: int */
  public static final int WGL_TEXTURE_FLOAT_RG_NV = 0x20b6;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_PIXEL_TYPE_EXT = 0x2013;
  /** <code>WGL_NV_render_depth_texture</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV = 0x20a4;
  /** <code>WGL_ARB_pbuffer</code> - CType: int */
  public static final int WGL_MAX_PBUFFER_HEIGHT_ARB = 0x2030;
  /** Part of CORE DEF - CType: int */
  public static final int __wglext_h_ = 0x1;
  /** <code>WGL_ARB_pbuffer</code> - CType: int */
  public static final int WGL_MAX_PBUFFER_PIXELS_ARB = 0x202e;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_MISSING_AFFINITY_MASK_NV = 0x20d1;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_EXCHANGE_EXT = 0x2028;
  /** <code>WGL_ARB_pbuffer</code> - CType: int */
  public static final int WGL_PBUFFER_HEIGHT_ARB = 0x2035;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_CLOCK_AMD = 0x21a4;
  /** <code>WGL_EXT_create_context_es2_profile</code> - CType: int */
  public static final int WGL_CONTEXT_ES2_PROFILE_BIT_EXT = 0x4;
  /** Part of CORE DEF - CType: int */
  public static final int SW_SHOWNA = 0x8;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_render_texture_rectangle = 0x1;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_NO_TEXTURE_ARB = 0x2077;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_multisample = 0x1;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_STACKED_FIELDS_2_1 = 0x20cc;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_FULL_ACCELERATION_EXT = 0x2027;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_EXCHANGE_ARB = 0x2028;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_I3D_digital_video_control = 0x1;
  /** <code>WGL_NV_float_buffer</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV = 0x20b3;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_NEED_SYSTEM_PALETTE_EXT = 0x2005;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_METADC = 0x4;
  /** <code>WGL_NV_render_depth_texture</code> - CType: int */
  public static final int WGL_DEPTH_COMPONENT_NV = 0x20a7;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_ALPHA_NV = 0x20c4;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_LAYER_BUFFERS_EXT = 0x2006;
  /** <code>WGL_NV_float_buffer</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV = 0x20b2;
  /** <code>WGL_EXT_pbuffer</code> - CType: int */
  public static final int WGL_MAX_PBUFFER_PIXELS_EXT = 0x202e;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_STEREO_EXT = 0x2012;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_MIPMAP_TEXTURE_ARB = 0x2074;
  /** <code>WGL_NV_render_texture_rectangle</code> - CType: int */
  public static final int WGL_TEXTURE_RECTANGLE_NV = 0x20a2;
  /** <code>WGL_3DFX_multisample</code> - CType: int */
  public static final int WGL_SAMPLES_3DFX = 0x2061;
  /** Part of CORE DEF - CType: int */
  public static final int SW_NORMAL = 0x1;
  /** <code>WGL_EXT_pbuffer</code> - CType: int */
  public static final int WGL_DRAW_TO_PBUFFER_EXT = 0x202d;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SUPPORT_GDI_EXT = 0x200f;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_render_texture = 0x1;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_STENCIL_BITS_EXT = 0x2023;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_CUBE_MAP_ARB = 0x2078;
  /** <code>WGL_I3D_digital_video_control</code> - CType: int */
  public static final int WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D = 0x2051;
  /** <code>WGL_I3D_genlock</code> - CType: int */
  public static final int WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D = 0x2049;
  /** Part of CORE DEF - CType: long */
  public static final long PFD_STEREO_DONTCARE = 0x80000000L;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX5_ARB = 0x208c;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_COLORSPACE = 0xe;
  /** <code>WGL_EXT_pbuffer</code> - CType: int */
  public static final int WGL_MAX_PBUFFER_WIDTH_EXT = 0x202f;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_MEMDC = 0xa;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_FORMAT_ARB = 0x2072;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_OPENGL_VERSION_STRING_AMD = 0x1f02;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_create_context_es2_profile = 0x1;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_COLOR_NV = 0x20c3;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_VENDOR_AMD = 0x1f00;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_SWAP_EXCHANGE = 0x200;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_DRAW_TO_BITMAP = 0x8;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_NEED_SYSTEM_PALETTE_ARB = 0x2005;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_gpu_affinity = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_make_current_read = 0x1;
  /** <code>WGL_I3D_gamma</code> - CType: int */
  public static final int WGL_GAMMA_EXCLUDE_DESKTOP_I3D = 0x204f;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_GREEN_SHIFT_EXT = 0x2018;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_LAYER_BUFFERS_ARB = 0x2006;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_DOUBLEBUFFER = 0x1;
  /** <code>WGL_EXT_create_context_es_profile</code> - CType: int */
  public static final int WGL_CONTEXT_ES_PROFILE_BIT_EXT = 0x4;
  /** <code>WGL_I3D_genlock</code> - CType: int */
  public static final int WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D = 0x2045;
  /** <code>WGL_I3D_image_buffer</code> - CType: int */
  public static final int WGL_IMAGE_BUFFER_MIN_ACCESS_I3D = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_ENHMETADC = 0xc;
  /** <code>WGL_ARB_create_context</code> - CType: int */
  public static final int WGL_CONTEXT_MAJOR_VERSION_ARB = 0x2091;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_GREEN_SHIFT_ARB = 0x2018;
  /** <code>WGL_ARB_pbuffer</code> - CType: int */
  public static final int WGL_MAX_PBUFFER_WIDTH_ARB = 0x202f;
  /** <code>WGL_ARB_pbuffer</code> - CType: int */
  public static final int WGL_DRAW_TO_PBUFFER_ARB = 0x202d;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_PIXEL_TYPE_ARB = 0x2013;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_video_output = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_GENERIC_FORMAT = 0x40;
  /** <code>WGL_ARB_create_context</code> - CType: int */
  public static final int WGL_CONTEXT_MINOR_VERSION_ARB = 0x2092;
  /** Part of CORE DEF - CType: int */
  public static final int SW_SHOWMAXIMIZED = 0x3;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_COLOR_BITS_ARB = 0x2014;
  /** <code>WGL_NV_render_depth_texture</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_DEPTH_NV = 0x20a3;
  /** <code>WGL_I3D_genlock</code> - CType: int */
  public static final int WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D = 0x2048;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_TRANSPARENT_GREEN_VALUE_ARB = 0x2038;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_I3D_swap_frame_usage = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_INVALID_PIXEL_TYPE_ARB = 0x2043;
  /** <code>WGL_NV_float_buffer</code> - CType: int */
  public static final int WGL_TEXTURE_FLOAT_R_NV = 0x20b5;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_ALPHA_BITS_EXT = 0x201b;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX6_ARB = 0x208d;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_FIELD_2 = 0x20ca;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_COLOR_BITS_EXT = 0x2014;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_FIELD_1 = 0x20c9;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_INVALID_DATA = 0xd;
  /** <code>WGL_EXT_pbuffer</code> - CType: int */
  public static final int WGL_PBUFFER_LARGEST_EXT = 0x2033;
  /** <code>WGL_EXT_multisample</code> - CType: int */
  public static final int WGL_SAMPLES_EXT = 0x2042;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_UNDERLAY_PLANE = ( - 0x1 );
  /** <code>WGL_I3D_digital_video_control</code> - CType: int */
  public static final int WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D = 0x2052;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_pbuffer = 0x1;
  /** <code>WGL_NV_float_buffer</code> - CType: int */
  public static final int WGL_FLOAT_COMPONENTS_NV = 0x20b0;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_TRANSPARENT_BLUE_VALUE_ARB = 0x2039;
  /** <code>WGL_3DL_stereo_control</code> - CType: int */
  public static final int WGL_STEREO_POLARITY_INVERT_3DL = 0x2058;
  /** <code>WGL_ARB_pbuffer</code> - CType: int */
  public static final int WGL_PBUFFER_LARGEST_ARB = 0x2033;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_NO_ACCELERATION_ARB = 0x2025;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_SUPPORT_GDI = 0x10;
  /** <code>WGL_NV_float_buffer</code> - CType: int */
  public static final int WGL_TEXTURE_FLOAT_RGB_NV = 0x20b7;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_ALPHA_BITS_ARB = 0x201b;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_robustness_application_isolation = 0x1;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_RGB_ARB = 0x2070;
  /** <code>WGL_I3D_digital_video_control</code> - CType: int */
  public static final int WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D = 0x2050;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_TYPE_RGBA_EXT = 0x202b;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_RAM_AMD = 0x21a3;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_NEED_SYSTEM_PALETTE = 0x100;
  /** Part of CORE DEF - CType: int */
  public static final int SW_MAXIMIZE = 0x3;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_STEREO_ARB = 0x2012;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_delay_before_swap = 0x1;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_TYPE_COLORINDEX_EXT = 0x202c;
  /** Part of CORE DEF - CType: int */
  public static final int SW_HIDE = 0x0;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_MIPMAP_LEVEL_ARB = 0x207b;
  /** <code>WGL_ARB_buffer_region</code> - CType: int */
  public static final int WGL_STENCIL_BUFFER_BIT_ARB = 0x8;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_METAFILE = 0x9;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_extensions_string = 0x1;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_UNDEFINED_ARB = 0x202a;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_ALPHA_BITS_EXT = 0x2021;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_TRANSPARENT_ALPHA_VALUE_ARB = 0x203a;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_video_capture = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int SW_SHOWMINIMIZED = 0x2;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_DRAW_TO_WINDOW_ARB = 0x2001;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_DOUBLEBUFFER_DONTCARE = 0x40000000;
  /** <code>WGL_ARB_create_context_robustness</code> - CType: int */
  public static final int WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB = 0x4;
  /** Part of CORE DEF - CType: int */
  public static final int SW_MAX = 0xb;
  /** <code>WGL_ARB_create_context</code> - CType: int */
  public static final int WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = 0x2;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_DC = 0x3;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_NO_ACCELERATION_EXT = 0x2025;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_BACK_RIGHT_ARB = 0x2086;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_robustness_share_group_isolation = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_PEN = 0x1;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_FRONT_RIGHT_ARB = 0x2084;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_I3D_image_buffer = 0x1;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_RED_BITS_EXT = 0x201e;
  /** <code>WGL_ARB_buffer_region</code> - CType: int */
  public static final int WGL_BACK_COLOR_BUFFER_BIT_ARB = 0x2;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_ENHMETAFILE = 0xd;
  /** Part of CORE DEF - CType: int */
  public static final int SW_FORCEMINIMIZE = 0xb;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_SUCCESS = 0x0;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_UNDEFINED_EXT = 0x202a;
  /** <code>WGL_NV_DX_interop</code> - CType: int */
  public static final int WGL_ACCESS_READ_WRITE_NV = 0x1;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX7_ARB = 0x208e;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_FASTEST_TARGET_GPUS_AMD = 0x21a2;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_TYPE_COLORINDEX_ARB = 0x202c;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_GENERIC_ACCELERATION_ARB = 0x2026;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_BLUE_SHIFT_ARB = 0x201a;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV = 0x20d0;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_INVALID_VERSION_ARB = 0x2095;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SHARE_DEPTH_ARB = 0x200c;
  /** <code>WGL_ATI_pixel_format_float</code> - CType: int */
  public static final int WGL_TYPE_RGBA_FLOAT_ATI = 0x21a0;
  /** <code>WGL_ARB_create_context_profile</code> - CType: int */
  public static final int WGL_CONTEXT_CORE_PROFILE_BIT_ARB = 0x1;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_ALPHA_BITS_ARB = 0x2021;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_DOUBLE_BUFFER_EXT = 0x2011;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV = 0x20c7;
  /** <code>WGL_I3D_genlock</code> - CType: int */
  public static final int WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D = 0x2047;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_DRAW_TO_WINDOW_EXT = 0x2001;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_pixel_format_packed_float = 0x1;
  /** <code>WGL_ARB_buffer_region</code> - CType: int */
  public static final int WGL_FRONT_COLOR_BUFFER_BIT_ARB = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int SW_SHOWNORMAL = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_INVALID_PROFILE_ARB = 0x2096;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_pixel_format = 0x1;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_RED_BITS_ARB = 0x201e;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_PROC_NOT_FOUND = 0x7f;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_create_context = 0x1;
  /** <code>WGL_ARB_create_context_profile</code> - CType: int */
  public static final int WGL_CONTEXT_PROFILE_MASK_ARB = 0x9126;
  /** <code>WGL_3DL_stereo_control</code> - CType: int */
  public static final int WGL_STEREO_EMITTER_DISABLE_3DL = 0x2056;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_SWAP_LAYER_BUFFERS = 0x800;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_DOUBLE_BUFFER_ARB = 0x2011;
  /** <code>WGL_EXT_pbuffer</code> - CType: int */
  public static final int WGL_PBUFFER_WIDTH_EXT = 0x2034;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x2081;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_2D_ARB = 0x207a;
  /** <code>WGL_ARB_multisample</code> - CType: int */
  public static final int WGL_SAMPLES_ARB = 0x2042;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_RGBA_ARB = 0x2071;
  /** <code>WGL_ARB_buffer_region</code> - CType: int */
  public static final int WGL_DEPTH_BUFFER_BIT_ARB = 0x4;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_TRANSPARENT_INDEX_VALUE_ARB = 0x203b;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_GENERIC_ACCELERATION_EXT = 0x2026;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_BLUE_SHIFT_EXT = 0x201a;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_render_depth_texture = 0x1;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_TYPE_RGBA_ARB = 0x202b;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SHARE_DEPTH_EXT = 0x200c;
  /** <code>WGL_NV_DX_interop</code> - CType: int */
  public static final int WGL_ACCESS_READ_ONLY_NV = 0x0;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_PAL = 0x5;
  /** <code>WGL_I3D_genlock</code> - CType: int */
  public static final int WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D = 0x204c;
  /** <code>WGL_NV_video_capture</code> - CType: int */
  public static final int WGL_NUM_VIDEO_CAPTURE_SLOTS_NV = 0x20cf;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_NUM_RB_AMD = 0x21a7;
  /** <code>WGL_EXT_depth_float</code> - CType: int */
  public static final int WGL_DEPTH_FLOAT_EXT = 0x2040;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_NUMBER_UNDERLAYS_EXT = 0x2009;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_BLUE_BITS_EXT = 0x2019;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_TRANSPARENT_ARB = 0x200a;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_BLUE_BITS_ARB = 0x2020;
  /** <code>WGL_I3D_genlock</code> - CType: int */
  public static final int WGL_GENLOCK_SOURCE_MULTIVIEW_I3D = 0x2044;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x207f;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SUPPORT_OPENGL_ARB = 0x2010;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_RED_BITS_EXT = 0x2015;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_CUBE_MAP_FACE_ARB = 0x207c;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_depth_float = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_DEPTH_DONTCARE = 0x20000000;
  /** <code>WGL_ARB_pbuffer</code> - CType: int */
  public static final int WGL_PBUFFER_WIDTH_ARB = 0x2034;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_DEPTH_NV = 0x20c5;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_BLUE_BITS_ARB = 0x2019;
  /** <code>WGL_NV_render_depth_texture</code> - CType: int */
  public static final int WGL_TEXTURE_DEPTH_COMPONENT_NV = 0x20a6;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x207e;
  /** <code>WGL_ARB_context_flush_control</code> - CType: int */
  public static final int WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB = 0x2098;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_BLUE_BITS_EXT = 0x2020;
  /** <code>WGL_I3D_gamma</code> - CType: int */
  public static final int WGL_GAMMA_TABLE_SIZE_I3D = 0x204e;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_SWAP_COPY = 0x400;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_ALPHA_SHIFT_EXT = 0x201c;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_create_context_es_profile = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_SUPPORT_OPENGL = 0x20;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_ALPHA_SHIFT_ARB = 0x201c;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_NUMBER_UNDERLAYS_ARB = 0x2009;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SUPPORT_OPENGL_EXT = 0x2010;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_RGBA_ARB = 0x2076;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_TRANSPARENT_EXT = 0x200a;
  /** <code>WGL_NV_float_buffer</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV = 0x20b1;
  /** <code>WGL_ARB_robustness_application_isolation</code> - CType: int */
  public static final int WGL_CONTEXT_RESET_ISOLATION_BIT_ARB = 0x8;
  /** <code>WGL_NV_DX_interop</code> - CType: int */
  public static final int WGL_ACCESS_WRITE_DISCARD_NV = 0x2;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_AUX_BUFFERS_EXT = 0x2024;
  /** Part of CORE DEF - CType: int */
  public static final int SW_SHOWNOACTIVATE = 0x4;
  /** <code>WGL_ARB_pbuffer</code> - CType: int */
  public static final int WGL_PBUFFER_LOST_ARB = 0x2036;
  /** <code>WGL_ARB_pixel_format_float</code> - CType: int */
  public static final int WGL_TYPE_RGBA_FLOAT_ARB = 0x21a0;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_multisample_coverage = 0x1;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SHARE_STENCIL_EXT = 0x200d;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_RENDERER_STRING_AMD = 0x1f01;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_RED_BITS_ARB = 0x2015;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_swap_control = 0x1;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX0_ARB = 0x2087;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_TYPE_RGBA = 0x0;
  /** Part of CORE DEF - CType: int */
  public static final int SW_SHOW = 0x5;
  /** Part of CORE DEF - CType: int */
  public static final int SW_SHOWDEFAULT = 0xa;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_NUMBER_OVERLAYS_ARB = 0x2008;
  /** <code>WGL_3DL_stereo_control</code> - CType: int */
  public static final int WGL_STEREO_POLARITY_NORMAL_3DL = 0x2057;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_NUM_SPI_AMD = 0x21a8;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_SUPPORT_DIRECTDRAW = 0x2000;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_BITS_EXT = 0x201d;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x2080;
  /** <code>WGL_ARB_create_context_profile</code> - CType: int */
  public static final int WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = 0x2;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_DEPTH_BITS_EXT = 0x2022;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_create_context_robustness = 0x1;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_COPY_EXT = 0x2029;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x207d;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_TARGET_ARB = 0x2073;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_BACK_LEFT_ARB = 0x2085;
  /** <code>WGL_NV_render_texture_rectangle</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV = 0x20a1;
  /** Part of CORE DEF - CType: int */
  public static final int DIB_RGB_COLORS = 0x0;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_ACCELERATION_EXT = 0x2003;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_TEXTURE_RGB_ARB = 0x2075;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_swap_control_tear = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int BI_BITFIELDS = 0x3;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SHARE_STENCIL_ARB = 0x200d;
  /** <code>WGL_EXT_pbuffer</code> - CType: int */
  public static final int WGL_OPTIMAL_PBUFFER_WIDTH_EXT = 0x2031;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_DRAW_TO_BITMAP_ARB = 0x2002;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_VIDEO_OUT_FRAME = 0x20c8;
  /** Part of CORE DEF - CType: int */
  public static final int HAS_STDDEF = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_EXT_display_color_table = 0x1;
  /** <code>WGL_ARB_framebuffer_sRGB</code> - CType: int */
  public static final int WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB = 0x20a9;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_DEPTH_BITS_ARB = 0x2022;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SHARE_ACCUM_EXT = 0x200e;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_FRONT_LEFT_ARB = 0x2083;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_create_context_profile = 0x1;
  /** <code>WGL_ARB_render_texture</code> - CType: int */
  public static final int WGL_AUX1_ARB = 0x2088;
  /** <code>WGL_AMD_gpu_association</code> - CType: int */
  public static final int WGL_GPU_NUM_PIPES_AMD = 0x21a5;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_METHOD_ARB = 0x2007;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_NV_swap_group = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_FONT = 0x6;
  /** <code>WGL_NV_present_video</code> - CType: int */
  public static final int WGL_NUM_VIDEO_SLOTS_NV = 0x20f0;
  /** Part of CORE DEF - CType: int */
  public static final int PFD_NEED_PALETTE = 0x80;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_INVALID_PIXEL_TYPE_EXT = 0x2043;
  /** <code>WGL_ARB_create_context_robustness</code> - CType: int */
  public static final int WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_ACCELERATION_ARB = 0x2003;
  /** <code>WGL_ARB_context_flush_control</code> - CType: int */
  public static final int WGL_CONTEXT_RELEASE_BEHAVIOR_ARB = 0x2097;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_ACCUM_BITS_ARB = 0x201d;
  /** <code>WGL_I3D_genlock</code> - CType: int */
  public static final int WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D = 0x204a;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_DRAW_TO_BITMAP_EXT = 0x2002;
  /** Part of CORE DEF - CType: int */
  public static final int OBJ_REGION = 0x8;
  /** <code>WGL_ARB_pixel_format</code> - CType: int */
  public static final int WGL_SHARE_ACCUM_ARB = 0x200e;
  /** <code>WGL_EXT_framebuffer_sRGB</code> - CType: int */
  public static final int WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x20a9;
  /** <code>WGL_EXT_pixel_format_packed_float</code> - CType: int */
  public static final int WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT = 0x20a8;
  /** <code>WGL_NV_video_output</code> - CType: int */
  public static final int WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV = 0x20c2;
  /** <code>WGL_EXT_pixel_format</code> - CType: int */
  public static final int WGL_SWAP_METHOD_EXT = 0x2007;
  /** Part of CORE DEF - CType: int */
  public static final int WGL_ARB_pixel_format = 0x1;
  /** Part of CORE DEF - CType: int */
  public static final int ERROR_INVALID_PIXEL_FORMAT = 0x7d0;
  /** <code>WGL_NV_render_texture_rectangle</code> - CType: int */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV = 0x20a0;

  /** Entry point to C language function: <code> HANDLE wglCreateBufferRegionARB(HDC hDC, int iLayerPlane, UINT uType) </code> <br>Part of <code>WGL_ARB_buffer_region</code><br>   */
  public long wglCreateBufferRegionARB(long hDC, int iLayerPlane, int uType);

  /** Entry point to C language function: <code> void wglDeleteBufferRegionARB(HANDLE hRegion) </code> <br>Part of <code>WGL_ARB_buffer_region</code><br>   */
  public void wglDeleteBufferRegionARB(long hRegion);

  /** Entry point to C language function: <code> BOOL wglSaveBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height) </code> <br>Part of <code>WGL_ARB_buffer_region</code><br>   */
  public boolean wglSaveBufferRegionARB(long hRegion, int x, int y, int width, int height);

  /** Entry point to C language function: <code> BOOL wglRestoreBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc) </code> <br>Part of <code>WGL_ARB_buffer_region</code><br>   */
  public boolean wglRestoreBufferRegionARB(long hRegion, int x, int y, int width, int height, int xSrc, int ySrc);

  /** Entry point to C language function: <code> HGLRC wglCreateContextAttribsARB(HDC hDC, HGLRC hShareContext, const int *  attribList) </code> <br>Part of <code>WGL_ARB_create_context</code><br>
      @param attribList a direct only {@link java.nio.IntBuffer}   */
  public long wglCreateContextAttribsARB(long hDC, long hShareContext, IntBuffer attribList);

  /** Entry point to C language function: <code> const char *  wglGetExtensionsStringARB(HDC hdc) </code> <br>Part of <code>WGL_ARB_extensions_string</code><br>   */
  public String wglGetExtensionsStringARB(long hdc);

  /** Entry point to C language function: <code> BOOL wglMakeContextCurrent(HDC hDrawDC, HDC hReadDC, HGLRC hglrc) </code> <br>Part of <code>WGL_ARB_make_current_read</code>, <code>WGL_EXT_make_current_read</code><br>Alias for: <code>wglMakeContextCurrentARB</code>, <code>wglMakeContextCurrentEXT</code>   */
  public boolean wglMakeContextCurrent(long hDrawDC, long hReadDC, long hglrc);

  /** Entry point to C language function: <code> HDC wglGetCurrentReadDC(void) </code> <br>Part of <code>WGL_ARB_make_current_read</code>, <code>WGL_EXT_make_current_read</code><br>Alias for: <code>wglGetCurrentReadDCARB</code>, <code>wglGetCurrentReadDCEXT</code>   */
  public long wglGetCurrentReadDC();

  /** Entry point to C language function: <code> HPBUFFERARB wglCreatePbufferARB(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *  piAttribList) </code> <br>Part of <code>WGL_ARB_pbuffer</code><br>
      @param piAttribList a direct only {@link java.nio.IntBuffer}   */
  public long wglCreatePbufferARB(long hDC, int iPixelFormat, int iWidth, int iHeight, IntBuffer piAttribList);

  /** Entry point to C language function: <code> HDC wglGetPbufferDCARB(HPBUFFERARB hPbuffer) </code> <br>Part of <code>WGL_ARB_pbuffer</code><br>   */
  public long wglGetPbufferDCARB(long hPbuffer);

  /** Entry point to C language function: <code> int wglReleasePbufferDCARB(HPBUFFERARB hPbuffer, HDC hDC) </code> <br>Part of <code>WGL_ARB_pbuffer</code><br>   */
  public int wglReleasePbufferDCARB(long hPbuffer, long hDC);

  /** Entry point to C language function: <code> BOOL wglDestroyPbufferARB(HPBUFFERARB hPbuffer) </code> <br>Part of <code>WGL_ARB_pbuffer</code><br>   */
  public boolean wglDestroyPbufferARB(long hPbuffer);

  /** Entry point to C language function: <code> BOOL wglQueryPbufferARB(HPBUFFERARB hPbuffer, int iAttribute, int *  piValue) </code> <br>Part of <code>WGL_ARB_pbuffer</code><br>
      @param piValue a direct only {@link java.nio.IntBuffer}   */
  public boolean wglQueryPbufferARB(long hPbuffer, int iAttribute, IntBuffer piValue);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribivARB(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *  piAttributes, int *  piValues) </code> <br>Part of <code>WGL_ARB_pixel_format</code><br>
      @param piAttributes a direct only {@link java.nio.IntBuffer}
      @param piValues a direct only {@link java.nio.IntBuffer}   */
  public boolean wglGetPixelFormatAttribivARB(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, IntBuffer piAttributes, IntBuffer piValues);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribfvARB(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *  piAttributes, FLOAT *  pfValues) </code> <br>Part of <code>WGL_ARB_pixel_format</code><br>
      @param piAttributes a direct only {@link java.nio.IntBuffer}
      @param pfValues a direct only {@link java.nio.FloatBuffer}   */
  public boolean wglGetPixelFormatAttribfvARB(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, IntBuffer piAttributes, FloatBuffer pfValues);

  /** Entry point to C language function: <code> BOOL wglChoosePixelFormatARB(HDC hdc, const int *  piAttribIList, const FLOAT *  pfAttribFList, UINT nMaxFormats, int *  piFormats, UINT *  nNumFormats) </code> <br>Part of <code>WGL_ARB_pixel_format</code><br>
      @param piAttribIList a direct only {@link java.nio.IntBuffer}
      @param pfAttribFList a direct only {@link java.nio.FloatBuffer}
      @param piFormats a direct only {@link java.nio.IntBuffer}
      @param nNumFormats a direct only {@link java.nio.IntBuffer}   */
  public boolean wglChoosePixelFormatARB(long hdc, IntBuffer piAttribIList, FloatBuffer pfAttribFList, int nMaxFormats, IntBuffer piFormats, IntBuffer nNumFormats);

  /** Entry point to C language function: <code> BOOL wglBindTexImageARB(HPBUFFERARB hPbuffer, int iBuffer) </code> <br>Part of <code>WGL_ARB_render_texture</code><br>   */
  public boolean wglBindTexImageARB(long hPbuffer, int iBuffer);

  /** Entry point to C language function: <code> BOOL wglReleaseTexImageARB(HPBUFFERARB hPbuffer, int iBuffer) </code> <br>Part of <code>WGL_ARB_render_texture</code><br>   */
  public boolean wglReleaseTexImageARB(long hPbuffer, int iBuffer);

  /** Entry point to C language function: <code> BOOL wglSetPbufferAttribARB(HPBUFFERARB hPbuffer, const int *  piAttribList) </code> <br>Part of <code>WGL_ARB_render_texture</code><br>
      @param piAttribList a direct only {@link java.nio.IntBuffer}   */
  public boolean wglSetPbufferAttribARB(long hPbuffer, IntBuffer piAttribList);

  /** Entry point to C language function: <code> BOOL wglSetStereoEmitterState3DL(HDC hDC, UINT uState) </code> <br>Part of <code>WGL_3DL_stereo_control</code><br>   */
  public boolean wglSetStereoEmitterState3DL(long hDC, int uState);

  /** Entry point to C language function: <code> UINT wglGetGPUIDsAMD(UINT maxCount, UINT *  ids) </code> <br>Part of <code>WGL_AMD_gpu_association</code><br>
      @param ids a direct only {@link java.nio.IntBuffer}   */
  public int wglGetGPUIDsAMD(int maxCount, IntBuffer ids);

  /** Entry point to C language function: <code> INT wglGetGPUInfoAMD(UINT id, int property, GLenum dataType, UINT size, void *  data) </code> <br>Part of <code>WGL_AMD_gpu_association</code><br>
      @param data a direct only {@link java.nio.Buffer}   */
  public int wglGetGPUInfoAMD(int id, int property, int dataType, int size, Buffer data);

  /** Entry point to C language function: <code> UINT wglGetContextGPUIDAMD(HGLRC hglrc) </code> <br>Part of <code>WGL_AMD_gpu_association</code><br>   */
  public int wglGetContextGPUIDAMD(long hglrc);

  /** Entry point to C language function: <code> HGLRC wglCreateAssociatedContextAMD(UINT id) </code> <br>Part of <code>WGL_AMD_gpu_association</code><br>   */
  public long wglCreateAssociatedContextAMD(int id);

  /** Entry point to C language function: <code> HGLRC wglCreateAssociatedContextAttribsAMD(UINT id, HGLRC hShareContext, const int *  attribList) </code> <br>Part of <code>WGL_AMD_gpu_association</code><br>
      @param attribList a direct only {@link java.nio.IntBuffer}   */
  public long wglCreateAssociatedContextAttribsAMD(int id, long hShareContext, IntBuffer attribList);

  /** Entry point to C language function: <code> BOOL wglDeleteAssociatedContextAMD(HGLRC hglrc) </code> <br>Part of <code>WGL_AMD_gpu_association</code><br>   */
  public boolean wglDeleteAssociatedContextAMD(long hglrc);

  /** Entry point to C language function: <code> BOOL wglMakeAssociatedContextCurrentAMD(HGLRC hglrc) </code> <br>Part of <code>WGL_AMD_gpu_association</code><br>   */
  public boolean wglMakeAssociatedContextCurrentAMD(long hglrc);

  /** Entry point to C language function: <code> HGLRC wglGetCurrentAssociatedContextAMD(void) </code> <br>Part of <code>WGL_AMD_gpu_association</code><br>   */
  public long wglGetCurrentAssociatedContextAMD();

  /** Entry point to C language function: <code> void wglBlitContextFramebufferAMD(HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) </code> <br>Part of <code>WGL_AMD_gpu_association</code><br>   */
  public void wglBlitContextFramebufferAMD(long dstCtx, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);

  /** Entry point to C language function: <code> GLboolean wglCreateDisplayColorTableEXT(GLushort id) </code> <br>Part of <code>WGL_EXT_display_color_table</code><br>   */
  public boolean wglCreateDisplayColorTableEXT(short id);

  /** Entry point to C language function: <code> GLboolean wglLoadDisplayColorTableEXT(const GLushort *  table, GLuint length) </code> <br>Part of <code>WGL_EXT_display_color_table</code><br>
      @param table a direct only {@link java.nio.ShortBuffer}   */
  public boolean wglLoadDisplayColorTableEXT(ShortBuffer table, int length);

  /** Entry point to C language function: <code> GLboolean wglBindDisplayColorTableEXT(GLushort id) </code> <br>Part of <code>WGL_EXT_display_color_table</code><br>   */
  public boolean wglBindDisplayColorTableEXT(short id);

  /** Entry point to C language function: <code> void wglDestroyDisplayColorTableEXT(GLushort id) </code> <br>Part of <code>WGL_EXT_display_color_table</code><br>   */
  public void wglDestroyDisplayColorTableEXT(short id);

  /** Entry point to C language function: <code> const char *  wglGetExtensionsStringEXT(void) </code> <br>Part of <code>WGL_EXT_extensions_string</code><br>   */
  public String wglGetExtensionsStringEXT();

  /** Entry point to C language function: <code> HPBUFFEREXT wglCreatePbufferEXT(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *  piAttribList) </code> <br>Part of <code>WGL_EXT_pbuffer</code><br>
      @param piAttribList a direct only {@link java.nio.IntBuffer}   */
  public long wglCreatePbufferEXT(long hDC, int iPixelFormat, int iWidth, int iHeight, IntBuffer piAttribList);

  /** Entry point to C language function: <code> HDC wglGetPbufferDCEXT(HPBUFFEREXT hPbuffer) </code> <br>Part of <code>WGL_EXT_pbuffer</code><br>   */
  public long wglGetPbufferDCEXT(long hPbuffer);

  /** Entry point to C language function: <code> int wglReleasePbufferDCEXT(HPBUFFEREXT hPbuffer, HDC hDC) </code> <br>Part of <code>WGL_EXT_pbuffer</code><br>   */
  public int wglReleasePbufferDCEXT(long hPbuffer, long hDC);

  /** Entry point to C language function: <code> BOOL wglDestroyPbufferEXT(HPBUFFEREXT hPbuffer) </code> <br>Part of <code>WGL_EXT_pbuffer</code><br>   */
  public boolean wglDestroyPbufferEXT(long hPbuffer);

  /** Entry point to C language function: <code> BOOL wglQueryPbufferEXT(HPBUFFEREXT hPbuffer, int iAttribute, int *  piValue) </code> <br>Part of <code>WGL_EXT_pbuffer</code><br>
      @param piValue a direct only {@link java.nio.IntBuffer}   */
  public boolean wglQueryPbufferEXT(long hPbuffer, int iAttribute, IntBuffer piValue);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribivEXT(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *  piAttributes, int *  piValues) </code> <br>Part of <code>WGL_EXT_pixel_format</code><br>
      @param piAttributes a direct only {@link java.nio.IntBuffer}
      @param piValues a direct only {@link java.nio.IntBuffer}   */
  public boolean wglGetPixelFormatAttribivEXT(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, IntBuffer piAttributes, IntBuffer piValues);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribfvEXT(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *  piAttributes, FLOAT *  pfValues) </code> <br>Part of <code>WGL_EXT_pixel_format</code><br>
      @param piAttributes a direct only {@link java.nio.IntBuffer}
      @param pfValues a direct only {@link java.nio.FloatBuffer}   */
  public boolean wglGetPixelFormatAttribfvEXT(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, IntBuffer piAttributes, FloatBuffer pfValues);

  /** Entry point to C language function: <code> BOOL wglChoosePixelFormatEXT(HDC hdc, const int *  piAttribIList, const FLOAT *  pfAttribFList, UINT nMaxFormats, int *  piFormats, UINT *  nNumFormats) </code> <br>Part of <code>WGL_EXT_pixel_format</code><br>
      @param piAttribIList a direct only {@link java.nio.IntBuffer}
      @param pfAttribFList a direct only {@link java.nio.FloatBuffer}
      @param piFormats a direct only {@link java.nio.IntBuffer}
      @param nNumFormats a direct only {@link java.nio.IntBuffer}   */
  public boolean wglChoosePixelFormatEXT(long hdc, IntBuffer piAttribIList, FloatBuffer pfAttribFList, int nMaxFormats, IntBuffer piFormats, IntBuffer nNumFormats);

  /** Entry point to C language function: <code> BOOL wglSwapIntervalEXT(int interval) </code> <br>Part of <code>WGL_EXT_swap_control</code><br>   */
  public boolean wglSwapIntervalEXT(int interval);

  /** Entry point to C language function: <code> int wglGetSwapIntervalEXT(void) </code> <br>Part of <code>WGL_EXT_swap_control</code><br>   */
  public int wglGetSwapIntervalEXT();

  /** Entry point to C language function: <code> BOOL wglEnableFrameLockI3D(void) </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code><br>   */
  public boolean wglEnableFrameLockI3D();

  /** Entry point to C language function: <code> BOOL wglDisableFrameLockI3D(void) </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code><br>   */
  public boolean wglDisableFrameLockI3D();

  /** Entry point to C language function: <code> BOOL wglIsEnabledFrameLockI3D(BOOL *  pFlag) </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code><br>
      @param pFlag a direct only {@link java.nio.ByteBuffer}   */
  public boolean wglIsEnabledFrameLockI3D(ByteBuffer pFlag);

  /** Entry point to C language function: <code> BOOL wglQueryFrameLockMasterI3D(BOOL *  pFlag) </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code><br>
      @param pFlag a direct only {@link java.nio.ByteBuffer}   */
  public boolean wglQueryFrameLockMasterI3D(ByteBuffer pFlag);

  /** Entry point to C language function: <code> BOOL wglGetFrameUsageI3D(float *  pUsage) </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code><br>
      @param pUsage a direct only {@link java.nio.FloatBuffer}   */
  public boolean wglGetFrameUsageI3D(FloatBuffer pUsage);

  /** Entry point to C language function: <code> BOOL wglBeginFrameTrackingI3D(void) </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code><br>   */
  public boolean wglBeginFrameTrackingI3D();

  /** Entry point to C language function: <code> BOOL wglEndFrameTrackingI3D(void) </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code><br>   */
  public boolean wglEndFrameTrackingI3D();

  /** Entry point to C language function: <code> BOOL wglQueryFrameTrackingI3D(DWORD *  pFrameCount, DWORD *  pMissedFrames, float *  pLastMissedUsage) </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code><br>
      @param pFrameCount a direct only {@link java.nio.IntBuffer}
      @param pMissedFrames a direct only {@link java.nio.IntBuffer}
      @param pLastMissedUsage a direct only {@link java.nio.FloatBuffer}   */
  public boolean wglQueryFrameTrackingI3D(IntBuffer pFrameCount, IntBuffer pMissedFrames, FloatBuffer pLastMissedUsage);

  /** Entry point to C language function: <code> BOOL wglDXSetResourceShareHandleNV(void *  dxObject, HANDLE shareHandle) </code> <br>Part of <code>WGL_NV_DX_interop</code><br>
      @param dxObject a direct only {@link java.nio.Buffer}   */
  public boolean wglDXSetResourceShareHandleNV(Buffer dxObject, long shareHandle);

  /** Entry point to C language function: <code> HANDLE wglDXOpenDeviceNV(void *  dxDevice) </code> <br>Part of <code>WGL_NV_DX_interop</code><br>
      @param dxDevice a direct only {@link java.nio.Buffer}   */
  public long wglDXOpenDeviceNV(Buffer dxDevice);

  /** Entry point to C language function: <code> BOOL wglDXCloseDeviceNV(HANDLE hDevice) </code> <br>Part of <code>WGL_NV_DX_interop</code><br>   */
  public boolean wglDXCloseDeviceNV(long hDevice);

  /** Entry point to C language function: <code> HANDLE wglDXRegisterObjectNV(HANDLE hDevice, void *  dxObject, GLuint name, GLenum type, GLenum access) </code> <br>Part of <code>WGL_NV_DX_interop</code><br>
      @param dxObject a direct only {@link java.nio.Buffer}   */
  public long wglDXRegisterObjectNV(long hDevice, Buffer dxObject, int name, int type, int access);

  /** Entry point to C language function: <code> BOOL wglDXUnregisterObjectNV(HANDLE hDevice, HANDLE hObject) </code> <br>Part of <code>WGL_NV_DX_interop</code><br>   */
  public boolean wglDXUnregisterObjectNV(long hDevice, long hObject);

  /** Entry point to C language function: <code> BOOL wglDXObjectAccessNV(HANDLE hObject, GLenum access) </code> <br>Part of <code>WGL_NV_DX_interop</code><br>   */
  public boolean wglDXObjectAccessNV(long hObject, int access);

  /** Entry point to C language function: <code> BOOL wglDXLockObjectsNV(HANDLE hDevice, GLint count, HANDLE *  hObjects) </code> <br>Part of <code>WGL_NV_DX_interop</code><br>
      @param hObjects a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public boolean wglDXLockObjectsNV(long hDevice, int count, PointerBuffer hObjects);

  /** Entry point to C language function: <code> BOOL wglDXUnlockObjectsNV(HANDLE hDevice, GLint count, HANDLE *  hObjects) </code> <br>Part of <code>WGL_NV_DX_interop</code><br>
      @param hObjects a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public boolean wglDXUnlockObjectsNV(long hDevice, int count, PointerBuffer hObjects);

  /** Entry point to C language function: <code> BOOL wglCopyImageSubDataNV(HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth) </code> <br>Part of <code>WGL_NV_copy_image</code><br>   */
  public boolean wglCopyImageSubDataNV(long hSrcRC, int srcName, int srcTarget, int srcLevel, int srcX, int srcY, int srcZ, long hDstRC, int dstName, int dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int width, int height, int depth);

  /** Entry point to C language function: <code> BOOL wglDelayBeforeSwapNV(HDC hDC, GLfloat seconds) </code> <br>Part of <code>WGL_NV_delay_before_swap</code><br>   */
  public boolean wglDelayBeforeSwapNV(long hDC, float seconds);

  /** Entry point to C language function: <code> int wglEnumerateVideoDevicesNV(HDC hDC, HVIDEOOUTPUTDEVICENV *  phDeviceList) </code> <br>Part of <code>WGL_NV_present_video</code><br>
      @param phDeviceList a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public int wglEnumerateVideoDevicesNV(long hDC, PointerBuffer phDeviceList);

  /** Entry point to C language function: <code> BOOL wglBindVideoDeviceNV(HDC hDC, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *  piAttribList) </code> <br>Part of <code>WGL_NV_present_video</code><br>
      @param piAttribList a direct only {@link java.nio.IntBuffer}   */
  public boolean wglBindVideoDeviceNV(long hDC, int uVideoSlot, long hVideoDevice, IntBuffer piAttribList);

  /** Entry point to C language function: <code> BOOL wglQueryCurrentContextNV(int iAttribute, int *  piValue) </code> <br>Part of <code>WGL_NV_present_video</code><br>
      @param piValue a direct only {@link java.nio.IntBuffer}   */
  public boolean wglQueryCurrentContextNV(int iAttribute, IntBuffer piValue);

  /** Entry point to C language function: <code> BOOL wglJoinSwapGroupNV(HDC hDC, GLuint group) </code> <br>Part of <code>WGL_NV_swap_group</code><br>   */
  public boolean wglJoinSwapGroupNV(long hDC, int group);

  /** Entry point to C language function: <code> BOOL wglBindSwapBarrierNV(GLuint group, GLuint barrier) </code> <br>Part of <code>WGL_NV_swap_group</code><br>   */
  public boolean wglBindSwapBarrierNV(int group, int barrier);

  /** Entry point to C language function: <code> BOOL wglQuerySwapGroupNV(HDC hDC, GLuint *  group, GLuint *  barrier) </code> <br>Part of <code>WGL_NV_swap_group</code><br>
      @param group a direct only {@link java.nio.IntBuffer}
      @param barrier a direct only {@link java.nio.IntBuffer}   */
  public boolean wglQuerySwapGroupNV(long hDC, IntBuffer group, IntBuffer barrier);

  /** Entry point to C language function: <code> BOOL wglQueryMaxSwapGroupsNV(HDC hDC, GLuint *  maxGroups, GLuint *  maxBarriers) </code> <br>Part of <code>WGL_NV_swap_group</code><br>
      @param maxGroups a direct only {@link java.nio.IntBuffer}
      @param maxBarriers a direct only {@link java.nio.IntBuffer}   */
  public boolean wglQueryMaxSwapGroupsNV(long hDC, IntBuffer maxGroups, IntBuffer maxBarriers);

  /** Entry point to C language function: <code> BOOL wglQueryFrameCountNV(HDC hDC, GLuint *  count) </code> <br>Part of <code>WGL_NV_swap_group</code><br>
      @param count a direct only {@link java.nio.IntBuffer}   */
  public boolean wglQueryFrameCountNV(long hDC, IntBuffer count);

  /** Entry point to C language function: <code> BOOL wglResetFrameCountNV(HDC hDC) </code> <br>Part of <code>WGL_NV_swap_group</code><br>   */
  public boolean wglResetFrameCountNV(long hDC);

  /** Entry point to C language function: <code> void *  wglAllocateMemoryNV(GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority) </code> <br>Part of <code>WGL_NV_vertex_array_range</code><br>   */
  public ByteBuffer wglAllocateMemoryNV(int size, float readfreq, float writefreq, float priority);

  /** Entry point to C language function: <code> void wglFreeMemoryNV(void *  pointer) </code> <br>Part of <code>WGL_NV_vertex_array_range</code><br>
      @param pointer a direct only {@link java.nio.Buffer}   */
  public void wglFreeMemoryNV(Buffer pointer);

  /** Entry point to C language function: <code> BOOL wglBindVideoCaptureDeviceNV(UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice) </code> <br>Part of <code>WGL_NV_video_capture</code><br>   */
  public boolean wglBindVideoCaptureDeviceNV(int uVideoSlot, long hDevice);

  /** Entry point to C language function: <code> UINT wglEnumerateVideoCaptureDevicesNV(HDC hDc, HVIDEOINPUTDEVICENV *  phDeviceList) </code> <br>Part of <code>WGL_NV_video_capture</code><br>
      @param phDeviceList a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public int wglEnumerateVideoCaptureDevicesNV(long hDc, PointerBuffer phDeviceList);

  /** Entry point to C language function: <code> BOOL wglLockVideoCaptureDeviceNV(HDC hDc, HVIDEOINPUTDEVICENV hDevice) </code> <br>Part of <code>WGL_NV_video_capture</code><br>   */
  public boolean wglLockVideoCaptureDeviceNV(long hDc, long hDevice);

  /** Entry point to C language function: <code> BOOL wglQueryVideoCaptureDeviceNV(HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *  piValue) </code> <br>Part of <code>WGL_NV_video_capture</code><br>
      @param piValue a direct only {@link java.nio.IntBuffer}   */
  public boolean wglQueryVideoCaptureDeviceNV(long hDc, long hDevice, int iAttribute, IntBuffer piValue);

  /** Entry point to C language function: <code> BOOL wglReleaseVideoCaptureDeviceNV(HDC hDc, HVIDEOINPUTDEVICENV hDevice) </code> <br>Part of <code>WGL_NV_video_capture</code><br>   */
  public boolean wglReleaseVideoCaptureDeviceNV(long hDc, long hDevice);

  /** Entry point to C language function: <code> BOOL wglGetVideoDeviceNV(HDC hDC, int numDevices, HPVIDEODEV *  hVideoDevice) </code> <br>Part of <code>WGL_NV_video_output</code><br>
      @param hVideoDevice a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public boolean wglGetVideoDeviceNV(long hDC, int numDevices, PointerBuffer hVideoDevice);

  /** Entry point to C language function: <code> BOOL wglReleaseVideoDeviceNV(HPVIDEODEV hVideoDevice) </code> <br>Part of <code>WGL_NV_video_output</code><br>   */
  public boolean wglReleaseVideoDeviceNV(long hVideoDevice);

  /** Entry point to C language function: <code> BOOL wglBindVideoImageNV(HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer) </code> <br>Part of <code>WGL_NV_video_output</code><br>   */
  public boolean wglBindVideoImageNV(long hVideoDevice, long hPbuffer, int iVideoBuffer);

  /** Entry point to C language function: <code> BOOL wglReleaseVideoImageNV(HPBUFFERARB hPbuffer, int iVideoBuffer) </code> <br>Part of <code>WGL_NV_video_output</code><br>   */
  public boolean wglReleaseVideoImageNV(long hPbuffer, int iVideoBuffer);

  /** Entry point to C language function: <code> BOOL wglSendPbufferToVideoNV(HPBUFFERARB hPbuffer, int iBufferType, unsigned long *  pulCounterPbuffer, BOOL bBlock) </code> <br>Part of <code>WGL_NV_video_output</code><br>
      @param pulCounterPbuffer a direct only {@link java.nio.LongBuffer}   */
  public boolean wglSendPbufferToVideoNV(long hPbuffer, int iBufferType, LongBuffer pulCounterPbuffer, boolean bBlock);

  /** Entry point to C language function: <code> BOOL wglGetVideoInfoNV(HPVIDEODEV hpVideoDevice, unsigned long *  pulCounterOutputPbuffer, unsigned long *  pulCounterOutputVideo) </code> <br>Part of <code>WGL_NV_video_output</code><br>
      @param pulCounterOutputPbuffer a direct only {@link java.nio.LongBuffer}
      @param pulCounterOutputVideo a direct only {@link java.nio.LongBuffer}   */
  public boolean wglGetVideoInfoNV(long hpVideoDevice, LongBuffer pulCounterOutputPbuffer, LongBuffer pulCounterOutputVideo);


  // --- Begin CustomJavaCode .cfg declarations
      public boolean isFunctionAvailable(String glFunctionName);
      public boolean isExtensionAvailable(String glExtensionName);
  // ---- End CustomJavaCode .cfg declarations

} // end of class WGLExt
